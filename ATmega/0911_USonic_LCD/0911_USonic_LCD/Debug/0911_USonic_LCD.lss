
0911_USonic_LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00000c1c  00000cb0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c1c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800122  00800122  00000cd2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cd2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d30  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f88  00000000  00000000  00000e14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000096c  00000000  00000000  00001d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000062d  00000000  00000000  00002708  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000174  00000000  00000000  00002d38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000561  00000000  00000000  00002eac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000590  00000000  00000000  0000340d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  0000399d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e1       	ldi	r30, 0x1C	; 28
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 32       	cpi	r26, 0x22	; 34
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e2       	ldi	r26, 0x22	; 34
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a3 32       	cpi	r26, 0x23	; 35
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	10 d1       	rcall	.+544    	; 0x2e4 <main>
  c4:	a9 c5       	rjmp	.+2898   	; 0xc18 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <I2C_Init>:
#define I2C_DDR		DDRD
#define I2C_SCL		PORTD0
#define I2C_SDA		PORTD1

void I2C_Init() {
    I2C_DDR |= (1<<I2C_SDA | 1<<I2C_SCL);
  c8:	81 b3       	in	r24, 0x11	; 17
  ca:	83 60       	ori	r24, 0x03	; 3
  cc:	81 bb       	out	0x11, r24	; 17

    // ATmega 128A의 DataSheet 참고
    TWBR = 72; // 100KHz, TWI Bit Rate Register
  ce:	88 e4       	ldi	r24, 0x48	; 72
  d0:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
  d4:	08 95       	ret

000000d6 <I2C_start>:
    // TWBR = 32; // 200KHz
    // TWBR = ; // 400KHz
}

void I2C_start() {
    TWCR = (1<<TWINT | 1<<TWSTA | 1<<TWEN);
  d6:	84 ea       	ldi	r24, 0xA4	; 164
  d8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

    while(!(TWCR & (1<<TWINT))); // TWint 시점 결정
  dc:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  e0:	88 23       	and	r24, r24
  e2:	e4 f7       	brge	.-8      	; 0xdc <I2C_start+0x6>
}
  e4:	08 95       	ret

000000e6 <I2C_Stop>:

void I2C_Stop() {
    TWCR = (1<<TWINT | 1<<TWEN | 1<<TWSTO);
  e6:	84 e9       	ldi	r24, 0x94	; 148
  e8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  ec:	08 95       	ret

000000ee <I2C_TxData>:
}

void I2C_TxData(uint8_t data) { // 1Byte 전송
    TWDR = data;
  ee:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
    TWCR = (1<<TWINT | 1<<TWEN);
  f2:	84 e8       	ldi	r24, 0x84	; 132
  f4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

    while(!(TWCR & (1<<TWINT))); // 전송 완료 대기
  f8:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  fc:	88 23       	and	r24, r24
  fe:	e4 f7       	brge	.-8      	; 0xf8 <I2C_TxData+0xa>
}
 100:	08 95       	ret

00000102 <I2C_TxByte>:

void I2C_TxByte(uint8_t devAddress, uint8_t data) {
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 106:	d8 2f       	mov	r29, r24
 108:	c6 2f       	mov	r28, r22
    I2C_start();
 10a:	e5 df       	rcall	.-54     	; 0xd6 <I2C_start>
    I2C_TxData(devAddress);
 10c:	8d 2f       	mov	r24, r29
 10e:	ef df       	rcall	.-34     	; 0xee <I2C_TxData>
    I2C_TxData(data);
 110:	8c 2f       	mov	r24, r28
 112:	ed df       	rcall	.-38     	; 0xee <I2C_TxData>
    I2C_Stop();
 114:	e8 df       	rcall	.-48     	; 0xe6 <I2C_Stop>
 116:	df 91       	pop	r29
}
 118:	cf 91       	pop	r28
 11a:	08 95       	ret

0000011c <LCD_EnablePin>:
 11c:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <__data_end>
	LCD_EnablePin();												//LCD 동작 신호 전송
}

void LCD_EnablePin()
{
	I2C_LCD_Data &= ~(1<<LCD_E);	//E LOW
 120:	6b 7f       	andi	r22, 0xFB	; 251
 122:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <__data_end>
	I2C_TxByte(LCD_DEV_ADDR, I2C_LCD_Data);
 126:	8e e4       	ldi	r24, 0x4E	; 78
 128:	ec df       	rcall	.-40     	; 0x102 <I2C_TxByte>
	
	I2C_LCD_Data |= (1<<LCD_E);	//E HIGH
 12a:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <__data_end>
 12e:	64 60       	ori	r22, 0x04	; 4
 130:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <__data_end>
	I2C_TxByte(LCD_DEV_ADDR, I2C_LCD_Data);
 134:	8e e4       	ldi	r24, 0x4E	; 78
 136:	e5 df       	rcall	.-54     	; 0x102 <I2C_TxByte>
	
	I2C_LCD_Data &= ~(1<<LCD_E);	//E LOW
 138:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <__data_end>
 13c:	6b 7f       	andi	r22, 0xFB	; 251
 13e:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <__data_end>
	I2C_TxByte(LCD_DEV_ADDR, I2C_LCD_Data);
 142:	8e e4       	ldi	r24, 0x4E	; 78
 144:	de df       	rcall	.-68     	; 0x102 <I2C_TxByte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 146:	8f ef       	ldi	r24, 0xFF	; 255
 148:	98 e1       	ldi	r25, 0x18	; 24
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <LCD_EnablePin+0x2e>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <LCD_EnablePin+0x34>
 150:	00 00       	nop
 152:	08 95       	ret

00000154 <LCD_DATA4bit>:
#define COMMAND_4_BIT_MODE		0x28 //4비트, 화면2행, 5x8 font

uint8_t I2C_LCD_Data;

void LCD_DATA4bit(uint8_t data)
{
 154:	cf 93       	push	r28
 156:	c8 2f       	mov	r28, r24
	I2C_LCD_Data = (I2C_LCD_Data & 0x0f) | (data & 0xf0); //LCD_DATA_PORT변수 초기화 후, 상위 4비트 출력
 158:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 15c:	8f 70       	andi	r24, 0x0F	; 15
 15e:	9c 2f       	mov	r25, r28
 160:	90 7f       	andi	r25, 0xF0	; 240
 162:	89 2b       	or	r24, r25
 164:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
	LCD_EnablePin();										//LCD 동작 신호 전송
 168:	d9 df       	rcall	.-78     	; 0x11c <LCD_EnablePin>
	I2C_LCD_Data = (I2C_LCD_Data & 0x0f) | (data & 0x0f) << 4;	//LCD_DATA_PORT변수 초기화 후, 하위 4비트 출력
 16a:	20 e1       	ldi	r18, 0x10	; 16
 16c:	c2 9f       	mul	r28, r18
 16e:	c0 01       	movw	r24, r0
 170:	11 24       	eor	r1, r1
 172:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <__data_end>
 176:	9f 70       	andi	r25, 0x0F	; 15
 178:	89 2b       	or	r24, r25
 17a:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
	LCD_EnablePin();												//LCD 동작 신호 전송
 17e:	ce df       	rcall	.-100    	; 0x11c <LCD_EnablePin>
}
 180:	cf 91       	pop	r28
 182:	08 95       	ret

00000184 <LCD_WriteCommand>:
	_delay_us(1600);
}

void LCD_WriteCommand(uint8_t commadData)
{
	I2C_LCD_Data &= ~(1<<LCD_RS);
 184:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <__data_end>
	I2C_LCD_Data &= ~(1<<LCD_RW);
 188:	9c 7f       	andi	r25, 0xFC	; 252
 18a:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <__data_end>
	LCD_DATA4bit(commadData);
 18e:	e2 cf       	rjmp	.-60     	; 0x154 <LCD_DATA4bit>
 190:	08 95       	ret

00000192 <LCD_WriteData>:
}

void LCD_WriteData(uint8_t charData)
{
	I2C_LCD_Data |= (1<<LCD_RS);
 192:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <__data_end>
 196:	91 60       	ori	r25, 0x01	; 1
	I2C_LCD_Data &= ~(1<<LCD_RW);
 198:	9d 7f       	andi	r25, 0xFD	; 253
 19a:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <__data_end>
	LCD_DATA4bit(charData);
 19e:	da cf       	rjmp	.-76     	; 0x154 <LCD_DATA4bit>
 1a0:	08 95       	ret

000001a2 <LCD_BacklightOn>:
}

void LCD_BacklightOn()
{
	I2C_LCD_Data |= (1<<LCD_BACKLIGHT);
 1a2:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <__data_end>
 1a6:	68 60       	ori	r22, 0x08	; 8
 1a8:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <__data_end>
	I2C_TxByte(LCD_DEV_ADDR, I2C_LCD_Data);
 1ac:	8e e4       	ldi	r24, 0x4E	; 78
 1ae:	a9 cf       	rjmp	.-174    	; 0x102 <I2C_TxByte>
 1b0:	08 95       	ret

000001b2 <LCD_GotoXY>:
}

void LCD_GotoXY(uint8_t row, uint8_t col)
{
	col %= 16;
 1b2:	6f 70       	andi	r22, 0x0F	; 15
	row %= 2;
 1b4:	81 70       	andi	r24, 0x01	; 1
	uint8_t address = (0x40 * row) + col;	//주소계산
 1b6:	90 e4       	ldi	r25, 0x40	; 64
 1b8:	89 9f       	mul	r24, r25
 1ba:	60 0d       	add	r22, r0
 1bc:	11 24       	eor	r1, r1
 1be:	86 2f       	mov	r24, r22
	uint8_t command = 0x80 + address;		//커맨드 값계산(주소설정)
	LCD_WriteCommand(command);				//주소커맨드 전송
 1c0:	80 58       	subi	r24, 0x80	; 128
 1c2:	e0 cf       	rjmp	.-64     	; 0x184 <LCD_WriteCommand>
 1c4:	08 95       	ret

000001c6 <LCD_WriteString>:
}

void LCD_WriteString(char *string)
{
 1c6:	0f 93       	push	r16
 1c8:	1f 93       	push	r17
 1ca:	cf 93       	push	r28
 1cc:	8c 01       	movw	r16, r24
	for (uint8_t i = 0; string[i]; i++)
 1ce:	c0 e0       	ldi	r28, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <LCD_WriteString+0x10>
	{
		LCD_WriteData(string[i]); //문자 출력
 1d2:	df df       	rcall	.-66     	; 0x192 <LCD_WriteData>
	LCD_WriteCommand(command);				//주소커맨드 전송
}

void LCD_WriteString(char *string)
{
	for (uint8_t i = 0; string[i]; i++)
 1d4:	cf 5f       	subi	r28, 0xFF	; 255
 1d6:	f8 01       	movw	r30, r16
 1d8:	ec 0f       	add	r30, r28
 1da:	f1 1d       	adc	r31, r1
 1dc:	80 81       	ld	r24, Z
 1de:	81 11       	cpse	r24, r1
 1e0:	f8 cf       	rjmp	.-16     	; 0x1d2 <LCD_WriteString+0xc>
	{
		LCD_WriteData(string[i]); //문자 출력
	}
}
 1e2:	cf 91       	pop	r28
 1e4:	1f 91       	pop	r17
 1e6:	0f 91       	pop	r16
 1e8:	08 95       	ret

000001ea <LCD_WriteStringXY>:

void LCD_WriteStringXY(uint8_t row, uint8_t col, char *string)
{
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	ea 01       	movw	r28, r20
	LCD_GotoXY(row, col);
 1f0:	e0 df       	rcall	.-64     	; 0x1b2 <LCD_GotoXY>
	LCD_WriteString(string);
 1f2:	ce 01       	movw	r24, r28
 1f4:	e8 df       	rcall	.-48     	; 0x1c6 <LCD_WriteString>
}
 1f6:	df 91       	pop	r29
 1f8:	cf 91       	pop	r28
 1fa:	08 95       	ret

000001fc <LCD_Init>:

void LCD_Init()
{
	I2C_Init();
 1fc:	65 df       	rcall	.-310    	; 0xc8 <I2C_Init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1fe:	2f ef       	ldi	r18, 0xFF	; 255
 200:	89 ef       	ldi	r24, 0xF9	; 249
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	21 50       	subi	r18, 0x01	; 1
 206:	80 40       	sbci	r24, 0x00	; 0
 208:	90 40       	sbci	r25, 0x00	; 0
 20a:	e1 f7       	brne	.-8      	; 0x204 <LCD_Init+0x8>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <LCD_Init+0x12>
 20e:	00 00       	nop
	//LCD_RS_DDR |= (1<<LCD_RS);
	//LCD_RW_DDR |= (1<<LCD_RW);
	//LCD_E_DDR |= (1<<LCD_E);
	
	_delay_ms(20);
	LCD_WriteCommand(0x03);
 210:	83 e0       	ldi	r24, 0x03	; 3
 212:	b8 df       	rcall	.-144    	; 0x184 <LCD_WriteCommand>
 214:	8f e1       	ldi	r24, 0x1F	; 31
 216:	9e e4       	ldi	r25, 0x4E	; 78
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	f1 f7       	brne	.-4      	; 0x218 <LCD_Init+0x1c>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <LCD_Init+0x22>
	_delay_ms(5);
	LCD_WriteCommand(0x03);
 21e:	00 00       	nop
 220:	83 e0       	ldi	r24, 0x03	; 3
 222:	b0 df       	rcall	.-160    	; 0x184 <LCD_WriteCommand>
 224:	8f e9       	ldi	r24, 0x9F	; 159
 226:	9f e0       	ldi	r25, 0x0F	; 15
 228:	01 97       	sbiw	r24, 0x01	; 1
 22a:	f1 f7       	brne	.-4      	; 0x228 <LCD_Init+0x2c>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <LCD_Init+0x32>
	_delay_ms(1);
	LCD_WriteCommand(0x03);
 22e:	00 00       	nop
 230:	83 e0       	ldi	r24, 0x03	; 3
	
	LCD_WriteCommand(0x02);
 232:	a8 df       	rcall	.-176    	; 0x184 <LCD_WriteCommand>
 234:	82 e0       	ldi	r24, 0x02	; 2
	
	LCD_WriteCommand(COMMAND_4_BIT_MODE); //8비트 보다 한 라인 추가
 236:	a6 df       	rcall	.-180    	; 0x184 <LCD_WriteCommand>
 238:	88 e2       	ldi	r24, 0x28	; 40
	
	LCD_WriteCommand(COMMAND_DISPLAY_OFF);
 23a:	a4 df       	rcall	.-184    	; 0x184 <LCD_WriteCommand>
 23c:	88 e0       	ldi	r24, 0x08	; 8
	LCD_WriteCommand(COMMAND_DISPLAY_CLEAR);
 23e:	a2 df       	rcall	.-188    	; 0x184 <LCD_WriteCommand>
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	a0 df       	rcall	.-192    	; 0x184 <LCD_WriteCommand>
	LCD_WriteCommand(COMMAND_DISPLAY_ON);
 244:	8c e0       	ldi	r24, 0x0C	; 12
 246:	9e df       	rcall	.-196    	; 0x184 <LCD_WriteCommand>
 248:	86 e0       	ldi	r24, 0x06	; 6
	LCD_WriteCommand(COMMAND_ENTRY_MODE);
 24a:	9c df       	rcall	.-200    	; 0x184 <LCD_WriteCommand>
 24c:	aa cf       	rjmp	.-172    	; 0x1a2 <LCD_BacklightOn>
 24e:	08 95       	ret

00000250 <timerInit>:
	//LCD_WriteCommand(COMMAND_DISPLAY_ON);
	LCD_BacklightOn();
 250:	8e b5       	in	r24, 0x2e	; 46
 252:	85 60       	ori	r24, 0x05	; 5
 254:	8e bd       	out	0x2e, r24	; 46

#include "DEF.h"

void timerInit()
{
	TCCR1B |= (1<<CS12) | (1<<CS10);
 256:	08 95       	ret

00000258 <triggerPin>:
}

void triggerPin()
{
	PORTD &= ~(1<<PORTD3);
 258:	82 b3       	in	r24, 0x12	; 18
 25a:	87 7f       	andi	r24, 0xF7	; 247
 25c:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 25e:	85 e0       	ldi	r24, 0x05	; 5
 260:	8a 95       	dec	r24
 262:	f1 f7       	brne	.-4      	; 0x260 <triggerPin+0x8>
 264:	00 00       	nop
	_delay_us(1);
	PORTD |= (1<<PORTD3);
 266:	82 b3       	in	r24, 0x12	; 18
 268:	88 60       	ori	r24, 0x08	; 8
 26a:	82 bb       	out	0x12, r24	; 18
 26c:	85 e3       	ldi	r24, 0x35	; 53
 26e:	8a 95       	dec	r24
 270:	f1 f7       	brne	.-4      	; 0x26e <triggerPin+0x16>
 272:	00 00       	nop
	_delay_us(10);
	PORTD &= ~(1<<PORTD3);
 274:	82 b3       	in	r24, 0x12	; 18
 276:	87 7f       	andi	r24, 0xF7	; 247
 278:	82 bb       	out	0x12, r24	; 18
 27a:	08 95       	ret

0000027c <meanDistance>:
}

uint8_t meanDistance()
{
	TCNT1 = 0;
 27c:	1d bc       	out	0x2d, r1	; 45
 27e:	1c bc       	out	0x2c, r1	; 44
	while(!(PIND & 0x10))
 280:	05 c0       	rjmp	.+10     	; 0x28c <meanDistance+0x10>
	{
		if(TCNT1 > 65000)
 282:	8c b5       	in	r24, 0x2c	; 44
 284:	9d b5       	in	r25, 0x2d	; 45
 286:	89 3e       	cpi	r24, 0xE9	; 233
 288:	9d 4f       	sbci	r25, 0xFD	; 253
 28a:	58 f5       	brcc	.+86     	; 0x2e2 <meanDistance+0x66>
}

uint8_t meanDistance()
{
	TCNT1 = 0;
	while(!(PIND & 0x10))
 28c:	84 9b       	sbis	0x10, 4	; 16
 28e:	f9 cf       	rjmp	.-14     	; 0x282 <meanDistance+0x6>
		if(TCNT1 > 65000)
		{
			return;
		}
	}
	TCNT1 = 0;
 290:	1d bc       	out	0x2d, r1	; 45
 292:	1c bc       	out	0x2c, r1	; 44
	while(PIND & 0x10)
 294:	08 c0       	rjmp	.+16     	; 0x2a6 <meanDistance+0x2a>
	{
		if(TCNT1 > 65000)
 296:	8c b5       	in	r24, 0x2c	; 44
 298:	9d b5       	in	r25, 0x2d	; 45
 29a:	89 3e       	cpi	r24, 0xE9	; 233
 29c:	9d 4f       	sbci	r25, 0xFD	; 253
 29e:	18 f0       	brcs	.+6      	; 0x2a6 <meanDistance+0x2a>
		{
			TCNT1 = 0;
 2a0:	1d bc       	out	0x2d, r1	; 45
 2a2:	1c bc       	out	0x2c, r1	; 44
			break;
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <meanDistance+0x2e>
		{
			return;
		}
	}
	TCNT1 = 0;
	while(PIND & 0x10)
 2a6:	84 99       	sbic	0x10, 4	; 16
 2a8:	f6 cf       	rjmp	.-20     	; 0x296 <meanDistance+0x1a>
		{
			TCNT1 = 0;
			break;
		}
	}
	double pluseWidth = 1000000.0 * TCNT1 * 1024 / 16000000;	
 2aa:	6c b5       	in	r22, 0x2c	; 44
 2ac:	7d b5       	in	r23, 0x2d	; 45
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	e6 d0       	rcall	.+460    	; 0x480 <__floatunsisf>
 2b4:	20 e0       	ldi	r18, 0x00	; 0
 2b6:	34 e2       	ldi	r19, 0x24	; 36
 2b8:	44 e7       	ldi	r20, 0x74	; 116
 2ba:	59 e4       	ldi	r21, 0x49	; 73
 2bc:	6f d1       	rcall	.+734    	; 0x59c <__mulsf3>
 2be:	20 e0       	ldi	r18, 0x00	; 0
 2c0:	30 e0       	ldi	r19, 0x00	; 0
 2c2:	40 e8       	ldi	r20, 0x80	; 128
 2c4:	54 e4       	ldi	r21, 0x44	; 68
 2c6:	6a d1       	rcall	.+724    	; 0x59c <__mulsf3>
 2c8:	20 e0       	ldi	r18, 0x00	; 0
 2ca:	34 e2       	ldi	r19, 0x24	; 36
 2cc:	44 e7       	ldi	r20, 0x74	; 116
 2ce:	5b e4       	ldi	r21, 0x4B	; 75
 2d0:	43 d0       	rcall	.+134    	; 0x358 <__divsf3>
	return pluseWidth / 58;
 2d2:	20 e0       	ldi	r18, 0x00	; 0
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	48 e6       	ldi	r20, 0x68	; 104
 2d8:	52 e4       	ldi	r21, 0x42	; 66
 2da:	3e d0       	rcall	.+124    	; 0x358 <__divsf3>
 2dc:	a5 d0       	rcall	.+330    	; 0x428 <__fixunssfsi>
 2de:	86 2f       	mov	r24, r22
 2e0:	08 95       	ret
}
 2e2:	08 95       	ret

000002e4 <main>:
#include "LCD.h"
#include "USonic.h"
#include "DEF.h"

int main(void)
{
 2e4:	cf 93       	push	r28
 2e6:	df 93       	push	r29
 2e8:	cd b7       	in	r28, 0x3d	; 61
 2ea:	de b7       	in	r29, 0x3e	; 62
 2ec:	6e 97       	sbiw	r28, 0x1e	; 30
 2ee:	0f b6       	in	r0, 0x3f	; 63
 2f0:	f8 94       	cli
 2f2:	de bf       	out	0x3e, r29	; 62
 2f4:	0f be       	out	0x3f, r0	; 63
 2f6:	cd bf       	out	0x3d, r28	; 61
	uint8_t distance;
	
	sei();
 2f8:	78 94       	sei
	
	DDRD |= 0x08;
 2fa:	81 b3       	in	r24, 0x11	; 17
 2fc:	88 60       	ori	r24, 0x08	; 8
 2fe:	81 bb       	out	0x11, r24	; 17
	DDRD &= 0xef;
 300:	81 b3       	in	r24, 0x11	; 17
 302:	8f 7e       	andi	r24, 0xEF	; 239
 304:	81 bb       	out	0x11, r24	; 17
	
	timerInit();
 306:	a4 df       	rcall	.-184    	; 0x250 <timerInit>
	
	uint8_t buff[30];
	
	LCD_Init();
 308:	79 df       	rcall	.-270    	; 0x1fc <LCD_Init>
 30a:	40 e0       	ldi	r20, 0x00	; 0
	LCD_WriteStringXY(0,0,"Hello ATmega128a");
 30c:	51 e0       	ldi	r21, 0x01	; 1
 30e:	60 e0       	ldi	r22, 0x00	; 0
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	6b df       	rcall	.-298    	; 0x1ea <LCD_WriteStringXY>
	
	while (1)
	{
		triggerPin();
 314:	a1 df       	rcall	.-190    	; 0x258 <triggerPin>
 316:	b2 df       	rcall	.-156    	; 0x27c <meanDistance>
		distance = meanDistance();
 318:	1f 92       	push	r1
 31a:	8f 93       	push	r24
		
		sprintf(buff, "distance : %-5d", distance);
 31c:	81 e1       	ldi	r24, 0x11	; 17
 31e:	91 e0       	ldi	r25, 0x01	; 1
 320:	9f 93       	push	r25
 322:	8f 93       	push	r24
 324:	8e 01       	movw	r16, r28
 326:	0f 5f       	subi	r16, 0xFF	; 255
 328:	1f 4f       	sbci	r17, 0xFF	; 255
 32a:	1f 93       	push	r17
 32c:	0f 93       	push	r16
 32e:	99 d1       	rcall	.+818    	; 0x662 <sprintf>
 330:	a8 01       	movw	r20, r16
		LCD_WriteStringXY(1,0,buff);
 332:	60 e0       	ldi	r22, 0x00	; 0
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	59 df       	rcall	.-334    	; 0x1ea <LCD_WriteStringXY>
 338:	2f ef       	ldi	r18, 0xFF	; 255
 33a:	83 ed       	ldi	r24, 0xD3	; 211
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 33c:	90 e3       	ldi	r25, 0x30	; 48
 33e:	21 50       	subi	r18, 0x01	; 1
 340:	80 40       	sbci	r24, 0x00	; 0
 342:	90 40       	sbci	r25, 0x00	; 0
 344:	e1 f7       	brne	.-8      	; 0x33e <main+0x5a>
 346:	00 c0       	rjmp	.+0      	; 0x348 <main+0x64>
 348:	00 00       	nop
 34a:	0f 90       	pop	r0
 34c:	0f 90       	pop	r0
 34e:	0f 90       	pop	r0
 350:	0f 90       	pop	r0
 352:	0f 90       	pop	r0
 354:	0f 90       	pop	r0
 356:	de cf       	rjmp	.-68     	; 0x314 <main+0x30>

00000358 <__divsf3>:
 358:	0c d0       	rcall	.+24     	; 0x372 <__divsf3x>
 35a:	e6 c0       	rjmp	.+460    	; 0x528 <__fp_round>
 35c:	de d0       	rcall	.+444    	; 0x51a <__fp_pscB>
 35e:	40 f0       	brcs	.+16     	; 0x370 <__divsf3+0x18>
 360:	d5 d0       	rcall	.+426    	; 0x50c <__fp_pscA>
 362:	30 f0       	brcs	.+12     	; 0x370 <__divsf3+0x18>
 364:	21 f4       	brne	.+8      	; 0x36e <__divsf3+0x16>
 366:	5f 3f       	cpi	r21, 0xFF	; 255
 368:	19 f0       	breq	.+6      	; 0x370 <__divsf3+0x18>
 36a:	c7 c0       	rjmp	.+398    	; 0x4fa <__fp_inf>
 36c:	51 11       	cpse	r21, r1
 36e:	10 c1       	rjmp	.+544    	; 0x590 <__fp_szero>
 370:	ca c0       	rjmp	.+404    	; 0x506 <__fp_nan>

00000372 <__divsf3x>:
 372:	eb d0       	rcall	.+470    	; 0x54a <__fp_split3>
 374:	98 f3       	brcs	.-26     	; 0x35c <__divsf3+0x4>

00000376 <__divsf3_pse>:
 376:	99 23       	and	r25, r25
 378:	c9 f3       	breq	.-14     	; 0x36c <__divsf3+0x14>
 37a:	55 23       	and	r21, r21
 37c:	b1 f3       	breq	.-20     	; 0x36a <__divsf3+0x12>
 37e:	95 1b       	sub	r25, r21
 380:	55 0b       	sbc	r21, r21
 382:	bb 27       	eor	r27, r27
 384:	aa 27       	eor	r26, r26
 386:	62 17       	cp	r22, r18
 388:	73 07       	cpc	r23, r19
 38a:	84 07       	cpc	r24, r20
 38c:	38 f0       	brcs	.+14     	; 0x39c <__divsf3_pse+0x26>
 38e:	9f 5f       	subi	r25, 0xFF	; 255
 390:	5f 4f       	sbci	r21, 0xFF	; 255
 392:	22 0f       	add	r18, r18
 394:	33 1f       	adc	r19, r19
 396:	44 1f       	adc	r20, r20
 398:	aa 1f       	adc	r26, r26
 39a:	a9 f3       	breq	.-22     	; 0x386 <__divsf3_pse+0x10>
 39c:	33 d0       	rcall	.+102    	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 39e:	0e 2e       	mov	r0, r30
 3a0:	3a f0       	brmi	.+14     	; 0x3b0 <__divsf3_pse+0x3a>
 3a2:	e0 e8       	ldi	r30, 0x80	; 128
 3a4:	30 d0       	rcall	.+96     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3a6:	91 50       	subi	r25, 0x01	; 1
 3a8:	50 40       	sbci	r21, 0x00	; 0
 3aa:	e6 95       	lsr	r30
 3ac:	00 1c       	adc	r0, r0
 3ae:	ca f7       	brpl	.-14     	; 0x3a2 <__divsf3_pse+0x2c>
 3b0:	29 d0       	rcall	.+82     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3b2:	fe 2f       	mov	r31, r30
 3b4:	27 d0       	rcall	.+78     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3b6:	66 0f       	add	r22, r22
 3b8:	77 1f       	adc	r23, r23
 3ba:	88 1f       	adc	r24, r24
 3bc:	bb 1f       	adc	r27, r27
 3be:	26 17       	cp	r18, r22
 3c0:	37 07       	cpc	r19, r23
 3c2:	48 07       	cpc	r20, r24
 3c4:	ab 07       	cpc	r26, r27
 3c6:	b0 e8       	ldi	r27, 0x80	; 128
 3c8:	09 f0       	breq	.+2      	; 0x3cc <__divsf3_pse+0x56>
 3ca:	bb 0b       	sbc	r27, r27
 3cc:	80 2d       	mov	r24, r0
 3ce:	bf 01       	movw	r22, r30
 3d0:	ff 27       	eor	r31, r31
 3d2:	93 58       	subi	r25, 0x83	; 131
 3d4:	5f 4f       	sbci	r21, 0xFF	; 255
 3d6:	2a f0       	brmi	.+10     	; 0x3e2 <__divsf3_pse+0x6c>
 3d8:	9e 3f       	cpi	r25, 0xFE	; 254
 3da:	51 05       	cpc	r21, r1
 3dc:	68 f0       	brcs	.+26     	; 0x3f8 <__divsf3_pse+0x82>
 3de:	8d c0       	rjmp	.+282    	; 0x4fa <__fp_inf>
 3e0:	d7 c0       	rjmp	.+430    	; 0x590 <__fp_szero>
 3e2:	5f 3f       	cpi	r21, 0xFF	; 255
 3e4:	ec f3       	brlt	.-6      	; 0x3e0 <__divsf3_pse+0x6a>
 3e6:	98 3e       	cpi	r25, 0xE8	; 232
 3e8:	dc f3       	brlt	.-10     	; 0x3e0 <__divsf3_pse+0x6a>
 3ea:	86 95       	lsr	r24
 3ec:	77 95       	ror	r23
 3ee:	67 95       	ror	r22
 3f0:	b7 95       	ror	r27
 3f2:	f7 95       	ror	r31
 3f4:	9f 5f       	subi	r25, 0xFF	; 255
 3f6:	c9 f7       	brne	.-14     	; 0x3ea <__divsf3_pse+0x74>
 3f8:	88 0f       	add	r24, r24
 3fa:	91 1d       	adc	r25, r1
 3fc:	96 95       	lsr	r25
 3fe:	87 95       	ror	r24
 400:	97 f9       	bld	r25, 7
 402:	08 95       	ret
 404:	e1 e0       	ldi	r30, 0x01	; 1
 406:	66 0f       	add	r22, r22
 408:	77 1f       	adc	r23, r23
 40a:	88 1f       	adc	r24, r24
 40c:	bb 1f       	adc	r27, r27
 40e:	62 17       	cp	r22, r18
 410:	73 07       	cpc	r23, r19
 412:	84 07       	cpc	r24, r20
 414:	ba 07       	cpc	r27, r26
 416:	20 f0       	brcs	.+8      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 418:	62 1b       	sub	r22, r18
 41a:	73 0b       	sbc	r23, r19
 41c:	84 0b       	sbc	r24, r20
 41e:	ba 0b       	sbc	r27, r26
 420:	ee 1f       	adc	r30, r30
 422:	88 f7       	brcc	.-30     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 424:	e0 95       	com	r30
 426:	08 95       	ret

00000428 <__fixunssfsi>:
 428:	98 d0       	rcall	.+304    	; 0x55a <__fp_splitA>
 42a:	88 f0       	brcs	.+34     	; 0x44e <__fixunssfsi+0x26>
 42c:	9f 57       	subi	r25, 0x7F	; 127
 42e:	90 f0       	brcs	.+36     	; 0x454 <__fixunssfsi+0x2c>
 430:	b9 2f       	mov	r27, r25
 432:	99 27       	eor	r25, r25
 434:	b7 51       	subi	r27, 0x17	; 23
 436:	a0 f0       	brcs	.+40     	; 0x460 <__fixunssfsi+0x38>
 438:	d1 f0       	breq	.+52     	; 0x46e <__fixunssfsi+0x46>
 43a:	66 0f       	add	r22, r22
 43c:	77 1f       	adc	r23, r23
 43e:	88 1f       	adc	r24, r24
 440:	99 1f       	adc	r25, r25
 442:	1a f0       	brmi	.+6      	; 0x44a <__fixunssfsi+0x22>
 444:	ba 95       	dec	r27
 446:	c9 f7       	brne	.-14     	; 0x43a <__fixunssfsi+0x12>
 448:	12 c0       	rjmp	.+36     	; 0x46e <__fixunssfsi+0x46>
 44a:	b1 30       	cpi	r27, 0x01	; 1
 44c:	81 f0       	breq	.+32     	; 0x46e <__fixunssfsi+0x46>
 44e:	9f d0       	rcall	.+318    	; 0x58e <__fp_zero>
 450:	b1 e0       	ldi	r27, 0x01	; 1
 452:	08 95       	ret
 454:	9c c0       	rjmp	.+312    	; 0x58e <__fp_zero>
 456:	67 2f       	mov	r22, r23
 458:	78 2f       	mov	r23, r24
 45a:	88 27       	eor	r24, r24
 45c:	b8 5f       	subi	r27, 0xF8	; 248
 45e:	39 f0       	breq	.+14     	; 0x46e <__fixunssfsi+0x46>
 460:	b9 3f       	cpi	r27, 0xF9	; 249
 462:	cc f3       	brlt	.-14     	; 0x456 <__fixunssfsi+0x2e>
 464:	86 95       	lsr	r24
 466:	77 95       	ror	r23
 468:	67 95       	ror	r22
 46a:	b3 95       	inc	r27
 46c:	d9 f7       	brne	.-10     	; 0x464 <__fixunssfsi+0x3c>
 46e:	3e f4       	brtc	.+14     	; 0x47e <__fixunssfsi+0x56>
 470:	90 95       	com	r25
 472:	80 95       	com	r24
 474:	70 95       	com	r23
 476:	61 95       	neg	r22
 478:	7f 4f       	sbci	r23, 0xFF	; 255
 47a:	8f 4f       	sbci	r24, 0xFF	; 255
 47c:	9f 4f       	sbci	r25, 0xFF	; 255
 47e:	08 95       	ret

00000480 <__floatunsisf>:
 480:	e8 94       	clt
 482:	09 c0       	rjmp	.+18     	; 0x496 <__floatsisf+0x12>

00000484 <__floatsisf>:
 484:	97 fb       	bst	r25, 7
 486:	3e f4       	brtc	.+14     	; 0x496 <__floatsisf+0x12>
 488:	90 95       	com	r25
 48a:	80 95       	com	r24
 48c:	70 95       	com	r23
 48e:	61 95       	neg	r22
 490:	7f 4f       	sbci	r23, 0xFF	; 255
 492:	8f 4f       	sbci	r24, 0xFF	; 255
 494:	9f 4f       	sbci	r25, 0xFF	; 255
 496:	99 23       	and	r25, r25
 498:	a9 f0       	breq	.+42     	; 0x4c4 <__floatsisf+0x40>
 49a:	f9 2f       	mov	r31, r25
 49c:	96 e9       	ldi	r25, 0x96	; 150
 49e:	bb 27       	eor	r27, r27
 4a0:	93 95       	inc	r25
 4a2:	f6 95       	lsr	r31
 4a4:	87 95       	ror	r24
 4a6:	77 95       	ror	r23
 4a8:	67 95       	ror	r22
 4aa:	b7 95       	ror	r27
 4ac:	f1 11       	cpse	r31, r1
 4ae:	f8 cf       	rjmp	.-16     	; 0x4a0 <__floatsisf+0x1c>
 4b0:	fa f4       	brpl	.+62     	; 0x4f0 <__floatsisf+0x6c>
 4b2:	bb 0f       	add	r27, r27
 4b4:	11 f4       	brne	.+4      	; 0x4ba <__floatsisf+0x36>
 4b6:	60 ff       	sbrs	r22, 0
 4b8:	1b c0       	rjmp	.+54     	; 0x4f0 <__floatsisf+0x6c>
 4ba:	6f 5f       	subi	r22, 0xFF	; 255
 4bc:	7f 4f       	sbci	r23, 0xFF	; 255
 4be:	8f 4f       	sbci	r24, 0xFF	; 255
 4c0:	9f 4f       	sbci	r25, 0xFF	; 255
 4c2:	16 c0       	rjmp	.+44     	; 0x4f0 <__floatsisf+0x6c>
 4c4:	88 23       	and	r24, r24
 4c6:	11 f0       	breq	.+4      	; 0x4cc <__floatsisf+0x48>
 4c8:	96 e9       	ldi	r25, 0x96	; 150
 4ca:	11 c0       	rjmp	.+34     	; 0x4ee <__floatsisf+0x6a>
 4cc:	77 23       	and	r23, r23
 4ce:	21 f0       	breq	.+8      	; 0x4d8 <__floatsisf+0x54>
 4d0:	9e e8       	ldi	r25, 0x8E	; 142
 4d2:	87 2f       	mov	r24, r23
 4d4:	76 2f       	mov	r23, r22
 4d6:	05 c0       	rjmp	.+10     	; 0x4e2 <__floatsisf+0x5e>
 4d8:	66 23       	and	r22, r22
 4da:	71 f0       	breq	.+28     	; 0x4f8 <__floatsisf+0x74>
 4dc:	96 e8       	ldi	r25, 0x86	; 134
 4de:	86 2f       	mov	r24, r22
 4e0:	70 e0       	ldi	r23, 0x00	; 0
 4e2:	60 e0       	ldi	r22, 0x00	; 0
 4e4:	2a f0       	brmi	.+10     	; 0x4f0 <__floatsisf+0x6c>
 4e6:	9a 95       	dec	r25
 4e8:	66 0f       	add	r22, r22
 4ea:	77 1f       	adc	r23, r23
 4ec:	88 1f       	adc	r24, r24
 4ee:	da f7       	brpl	.-10     	; 0x4e6 <__floatsisf+0x62>
 4f0:	88 0f       	add	r24, r24
 4f2:	96 95       	lsr	r25
 4f4:	87 95       	ror	r24
 4f6:	97 f9       	bld	r25, 7
 4f8:	08 95       	ret

000004fa <__fp_inf>:
 4fa:	97 f9       	bld	r25, 7
 4fc:	9f 67       	ori	r25, 0x7F	; 127
 4fe:	80 e8       	ldi	r24, 0x80	; 128
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	60 e0       	ldi	r22, 0x00	; 0
 504:	08 95       	ret

00000506 <__fp_nan>:
 506:	9f ef       	ldi	r25, 0xFF	; 255
 508:	80 ec       	ldi	r24, 0xC0	; 192
 50a:	08 95       	ret

0000050c <__fp_pscA>:
 50c:	00 24       	eor	r0, r0
 50e:	0a 94       	dec	r0
 510:	16 16       	cp	r1, r22
 512:	17 06       	cpc	r1, r23
 514:	18 06       	cpc	r1, r24
 516:	09 06       	cpc	r0, r25
 518:	08 95       	ret

0000051a <__fp_pscB>:
 51a:	00 24       	eor	r0, r0
 51c:	0a 94       	dec	r0
 51e:	12 16       	cp	r1, r18
 520:	13 06       	cpc	r1, r19
 522:	14 06       	cpc	r1, r20
 524:	05 06       	cpc	r0, r21
 526:	08 95       	ret

00000528 <__fp_round>:
 528:	09 2e       	mov	r0, r25
 52a:	03 94       	inc	r0
 52c:	00 0c       	add	r0, r0
 52e:	11 f4       	brne	.+4      	; 0x534 <__fp_round+0xc>
 530:	88 23       	and	r24, r24
 532:	52 f0       	brmi	.+20     	; 0x548 <__fp_round+0x20>
 534:	bb 0f       	add	r27, r27
 536:	40 f4       	brcc	.+16     	; 0x548 <__fp_round+0x20>
 538:	bf 2b       	or	r27, r31
 53a:	11 f4       	brne	.+4      	; 0x540 <__fp_round+0x18>
 53c:	60 ff       	sbrs	r22, 0
 53e:	04 c0       	rjmp	.+8      	; 0x548 <__fp_round+0x20>
 540:	6f 5f       	subi	r22, 0xFF	; 255
 542:	7f 4f       	sbci	r23, 0xFF	; 255
 544:	8f 4f       	sbci	r24, 0xFF	; 255
 546:	9f 4f       	sbci	r25, 0xFF	; 255
 548:	08 95       	ret

0000054a <__fp_split3>:
 54a:	57 fd       	sbrc	r21, 7
 54c:	90 58       	subi	r25, 0x80	; 128
 54e:	44 0f       	add	r20, r20
 550:	55 1f       	adc	r21, r21
 552:	59 f0       	breq	.+22     	; 0x56a <__fp_splitA+0x10>
 554:	5f 3f       	cpi	r21, 0xFF	; 255
 556:	71 f0       	breq	.+28     	; 0x574 <__fp_splitA+0x1a>
 558:	47 95       	ror	r20

0000055a <__fp_splitA>:
 55a:	88 0f       	add	r24, r24
 55c:	97 fb       	bst	r25, 7
 55e:	99 1f       	adc	r25, r25
 560:	61 f0       	breq	.+24     	; 0x57a <__fp_splitA+0x20>
 562:	9f 3f       	cpi	r25, 0xFF	; 255
 564:	79 f0       	breq	.+30     	; 0x584 <__fp_splitA+0x2a>
 566:	87 95       	ror	r24
 568:	08 95       	ret
 56a:	12 16       	cp	r1, r18
 56c:	13 06       	cpc	r1, r19
 56e:	14 06       	cpc	r1, r20
 570:	55 1f       	adc	r21, r21
 572:	f2 cf       	rjmp	.-28     	; 0x558 <__fp_split3+0xe>
 574:	46 95       	lsr	r20
 576:	f1 df       	rcall	.-30     	; 0x55a <__fp_splitA>
 578:	08 c0       	rjmp	.+16     	; 0x58a <__fp_splitA+0x30>
 57a:	16 16       	cp	r1, r22
 57c:	17 06       	cpc	r1, r23
 57e:	18 06       	cpc	r1, r24
 580:	99 1f       	adc	r25, r25
 582:	f1 cf       	rjmp	.-30     	; 0x566 <__fp_splitA+0xc>
 584:	86 95       	lsr	r24
 586:	71 05       	cpc	r23, r1
 588:	61 05       	cpc	r22, r1
 58a:	08 94       	sec
 58c:	08 95       	ret

0000058e <__fp_zero>:
 58e:	e8 94       	clt

00000590 <__fp_szero>:
 590:	bb 27       	eor	r27, r27
 592:	66 27       	eor	r22, r22
 594:	77 27       	eor	r23, r23
 596:	cb 01       	movw	r24, r22
 598:	97 f9       	bld	r25, 7
 59a:	08 95       	ret

0000059c <__mulsf3>:
 59c:	0b d0       	rcall	.+22     	; 0x5b4 <__mulsf3x>
 59e:	c4 cf       	rjmp	.-120    	; 0x528 <__fp_round>
 5a0:	b5 df       	rcall	.-150    	; 0x50c <__fp_pscA>
 5a2:	28 f0       	brcs	.+10     	; 0x5ae <__mulsf3+0x12>
 5a4:	ba df       	rcall	.-140    	; 0x51a <__fp_pscB>
 5a6:	18 f0       	brcs	.+6      	; 0x5ae <__mulsf3+0x12>
 5a8:	95 23       	and	r25, r21
 5aa:	09 f0       	breq	.+2      	; 0x5ae <__mulsf3+0x12>
 5ac:	a6 cf       	rjmp	.-180    	; 0x4fa <__fp_inf>
 5ae:	ab cf       	rjmp	.-170    	; 0x506 <__fp_nan>
 5b0:	11 24       	eor	r1, r1
 5b2:	ee cf       	rjmp	.-36     	; 0x590 <__fp_szero>

000005b4 <__mulsf3x>:
 5b4:	ca df       	rcall	.-108    	; 0x54a <__fp_split3>
 5b6:	a0 f3       	brcs	.-24     	; 0x5a0 <__mulsf3+0x4>

000005b8 <__mulsf3_pse>:
 5b8:	95 9f       	mul	r25, r21
 5ba:	d1 f3       	breq	.-12     	; 0x5b0 <__mulsf3+0x14>
 5bc:	95 0f       	add	r25, r21
 5be:	50 e0       	ldi	r21, 0x00	; 0
 5c0:	55 1f       	adc	r21, r21
 5c2:	62 9f       	mul	r22, r18
 5c4:	f0 01       	movw	r30, r0
 5c6:	72 9f       	mul	r23, r18
 5c8:	bb 27       	eor	r27, r27
 5ca:	f0 0d       	add	r31, r0
 5cc:	b1 1d       	adc	r27, r1
 5ce:	63 9f       	mul	r22, r19
 5d0:	aa 27       	eor	r26, r26
 5d2:	f0 0d       	add	r31, r0
 5d4:	b1 1d       	adc	r27, r1
 5d6:	aa 1f       	adc	r26, r26
 5d8:	64 9f       	mul	r22, r20
 5da:	66 27       	eor	r22, r22
 5dc:	b0 0d       	add	r27, r0
 5de:	a1 1d       	adc	r26, r1
 5e0:	66 1f       	adc	r22, r22
 5e2:	82 9f       	mul	r24, r18
 5e4:	22 27       	eor	r18, r18
 5e6:	b0 0d       	add	r27, r0
 5e8:	a1 1d       	adc	r26, r1
 5ea:	62 1f       	adc	r22, r18
 5ec:	73 9f       	mul	r23, r19
 5ee:	b0 0d       	add	r27, r0
 5f0:	a1 1d       	adc	r26, r1
 5f2:	62 1f       	adc	r22, r18
 5f4:	83 9f       	mul	r24, r19
 5f6:	a0 0d       	add	r26, r0
 5f8:	61 1d       	adc	r22, r1
 5fa:	22 1f       	adc	r18, r18
 5fc:	74 9f       	mul	r23, r20
 5fe:	33 27       	eor	r19, r19
 600:	a0 0d       	add	r26, r0
 602:	61 1d       	adc	r22, r1
 604:	23 1f       	adc	r18, r19
 606:	84 9f       	mul	r24, r20
 608:	60 0d       	add	r22, r0
 60a:	21 1d       	adc	r18, r1
 60c:	82 2f       	mov	r24, r18
 60e:	76 2f       	mov	r23, r22
 610:	6a 2f       	mov	r22, r26
 612:	11 24       	eor	r1, r1
 614:	9f 57       	subi	r25, 0x7F	; 127
 616:	50 40       	sbci	r21, 0x00	; 0
 618:	8a f0       	brmi	.+34     	; 0x63c <__mulsf3_pse+0x84>
 61a:	e1 f0       	breq	.+56     	; 0x654 <__mulsf3_pse+0x9c>
 61c:	88 23       	and	r24, r24
 61e:	4a f0       	brmi	.+18     	; 0x632 <__mulsf3_pse+0x7a>
 620:	ee 0f       	add	r30, r30
 622:	ff 1f       	adc	r31, r31
 624:	bb 1f       	adc	r27, r27
 626:	66 1f       	adc	r22, r22
 628:	77 1f       	adc	r23, r23
 62a:	88 1f       	adc	r24, r24
 62c:	91 50       	subi	r25, 0x01	; 1
 62e:	50 40       	sbci	r21, 0x00	; 0
 630:	a9 f7       	brne	.-22     	; 0x61c <__mulsf3_pse+0x64>
 632:	9e 3f       	cpi	r25, 0xFE	; 254
 634:	51 05       	cpc	r21, r1
 636:	70 f0       	brcs	.+28     	; 0x654 <__mulsf3_pse+0x9c>
 638:	60 cf       	rjmp	.-320    	; 0x4fa <__fp_inf>
 63a:	aa cf       	rjmp	.-172    	; 0x590 <__fp_szero>
 63c:	5f 3f       	cpi	r21, 0xFF	; 255
 63e:	ec f3       	brlt	.-6      	; 0x63a <__mulsf3_pse+0x82>
 640:	98 3e       	cpi	r25, 0xE8	; 232
 642:	dc f3       	brlt	.-10     	; 0x63a <__mulsf3_pse+0x82>
 644:	86 95       	lsr	r24
 646:	77 95       	ror	r23
 648:	67 95       	ror	r22
 64a:	b7 95       	ror	r27
 64c:	f7 95       	ror	r31
 64e:	e7 95       	ror	r30
 650:	9f 5f       	subi	r25, 0xFF	; 255
 652:	c1 f7       	brne	.-16     	; 0x644 <__mulsf3_pse+0x8c>
 654:	fe 2b       	or	r31, r30
 656:	88 0f       	add	r24, r24
 658:	91 1d       	adc	r25, r1
 65a:	96 95       	lsr	r25
 65c:	87 95       	ror	r24
 65e:	97 f9       	bld	r25, 7
 660:	08 95       	ret

00000662 <sprintf>:
 662:	0f 93       	push	r16
 664:	1f 93       	push	r17
 666:	cf 93       	push	r28
 668:	df 93       	push	r29
 66a:	cd b7       	in	r28, 0x3d	; 61
 66c:	de b7       	in	r29, 0x3e	; 62
 66e:	2e 97       	sbiw	r28, 0x0e	; 14
 670:	0f b6       	in	r0, 0x3f	; 63
 672:	f8 94       	cli
 674:	de bf       	out	0x3e, r29	; 62
 676:	0f be       	out	0x3f, r0	; 63
 678:	cd bf       	out	0x3d, r28	; 61
 67a:	0d 89       	ldd	r16, Y+21	; 0x15
 67c:	1e 89       	ldd	r17, Y+22	; 0x16
 67e:	86 e0       	ldi	r24, 0x06	; 6
 680:	8c 83       	std	Y+4, r24	; 0x04
 682:	1a 83       	std	Y+2, r17	; 0x02
 684:	09 83       	std	Y+1, r16	; 0x01
 686:	8f ef       	ldi	r24, 0xFF	; 255
 688:	9f e7       	ldi	r25, 0x7F	; 127
 68a:	9e 83       	std	Y+6, r25	; 0x06
 68c:	8d 83       	std	Y+5, r24	; 0x05
 68e:	ae 01       	movw	r20, r28
 690:	47 5e       	subi	r20, 0xE7	; 231
 692:	5f 4f       	sbci	r21, 0xFF	; 255
 694:	6f 89       	ldd	r22, Y+23	; 0x17
 696:	78 8d       	ldd	r23, Y+24	; 0x18
 698:	ce 01       	movw	r24, r28
 69a:	01 96       	adiw	r24, 0x01	; 1
 69c:	10 d0       	rcall	.+32     	; 0x6be <vfprintf>
 69e:	ef 81       	ldd	r30, Y+7	; 0x07
 6a0:	f8 85       	ldd	r31, Y+8	; 0x08
 6a2:	e0 0f       	add	r30, r16
 6a4:	f1 1f       	adc	r31, r17
 6a6:	10 82       	st	Z, r1
 6a8:	2e 96       	adiw	r28, 0x0e	; 14
 6aa:	0f b6       	in	r0, 0x3f	; 63
 6ac:	f8 94       	cli
 6ae:	de bf       	out	0x3e, r29	; 62
 6b0:	0f be       	out	0x3f, r0	; 63
 6b2:	cd bf       	out	0x3d, r28	; 61
 6b4:	df 91       	pop	r29
 6b6:	cf 91       	pop	r28
 6b8:	1f 91       	pop	r17
 6ba:	0f 91       	pop	r16
 6bc:	08 95       	ret

000006be <vfprintf>:
 6be:	2f 92       	push	r2
 6c0:	3f 92       	push	r3
 6c2:	4f 92       	push	r4
 6c4:	5f 92       	push	r5
 6c6:	6f 92       	push	r6
 6c8:	7f 92       	push	r7
 6ca:	8f 92       	push	r8
 6cc:	9f 92       	push	r9
 6ce:	af 92       	push	r10
 6d0:	bf 92       	push	r11
 6d2:	cf 92       	push	r12
 6d4:	df 92       	push	r13
 6d6:	ef 92       	push	r14
 6d8:	ff 92       	push	r15
 6da:	0f 93       	push	r16
 6dc:	1f 93       	push	r17
 6de:	cf 93       	push	r28
 6e0:	df 93       	push	r29
 6e2:	cd b7       	in	r28, 0x3d	; 61
 6e4:	de b7       	in	r29, 0x3e	; 62
 6e6:	2b 97       	sbiw	r28, 0x0b	; 11
 6e8:	0f b6       	in	r0, 0x3f	; 63
 6ea:	f8 94       	cli
 6ec:	de bf       	out	0x3e, r29	; 62
 6ee:	0f be       	out	0x3f, r0	; 63
 6f0:	cd bf       	out	0x3d, r28	; 61
 6f2:	6c 01       	movw	r12, r24
 6f4:	7b 01       	movw	r14, r22
 6f6:	8a 01       	movw	r16, r20
 6f8:	fc 01       	movw	r30, r24
 6fa:	17 82       	std	Z+7, r1	; 0x07
 6fc:	16 82       	std	Z+6, r1	; 0x06
 6fe:	83 81       	ldd	r24, Z+3	; 0x03
 700:	81 ff       	sbrs	r24, 1
 702:	bf c1       	rjmp	.+894    	; 0xa82 <vfprintf+0x3c4>
 704:	ce 01       	movw	r24, r28
 706:	01 96       	adiw	r24, 0x01	; 1
 708:	3c 01       	movw	r6, r24
 70a:	f6 01       	movw	r30, r12
 70c:	93 81       	ldd	r25, Z+3	; 0x03
 70e:	f7 01       	movw	r30, r14
 710:	93 fd       	sbrc	r25, 3
 712:	85 91       	lpm	r24, Z+
 714:	93 ff       	sbrs	r25, 3
 716:	81 91       	ld	r24, Z+
 718:	7f 01       	movw	r14, r30
 71a:	88 23       	and	r24, r24
 71c:	09 f4       	brne	.+2      	; 0x720 <vfprintf+0x62>
 71e:	ad c1       	rjmp	.+858    	; 0xa7a <vfprintf+0x3bc>
 720:	85 32       	cpi	r24, 0x25	; 37
 722:	39 f4       	brne	.+14     	; 0x732 <vfprintf+0x74>
 724:	93 fd       	sbrc	r25, 3
 726:	85 91       	lpm	r24, Z+
 728:	93 ff       	sbrs	r25, 3
 72a:	81 91       	ld	r24, Z+
 72c:	7f 01       	movw	r14, r30
 72e:	85 32       	cpi	r24, 0x25	; 37
 730:	21 f4       	brne	.+8      	; 0x73a <vfprintf+0x7c>
 732:	b6 01       	movw	r22, r12
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	d6 d1       	rcall	.+940    	; 0xae4 <fputc>
 738:	e8 cf       	rjmp	.-48     	; 0x70a <vfprintf+0x4c>
 73a:	91 2c       	mov	r9, r1
 73c:	21 2c       	mov	r2, r1
 73e:	31 2c       	mov	r3, r1
 740:	ff e1       	ldi	r31, 0x1F	; 31
 742:	f3 15       	cp	r31, r3
 744:	d8 f0       	brcs	.+54     	; 0x77c <vfprintf+0xbe>
 746:	8b 32       	cpi	r24, 0x2B	; 43
 748:	79 f0       	breq	.+30     	; 0x768 <vfprintf+0xaa>
 74a:	38 f4       	brcc	.+14     	; 0x75a <vfprintf+0x9c>
 74c:	80 32       	cpi	r24, 0x20	; 32
 74e:	79 f0       	breq	.+30     	; 0x76e <vfprintf+0xb0>
 750:	83 32       	cpi	r24, 0x23	; 35
 752:	a1 f4       	brne	.+40     	; 0x77c <vfprintf+0xbe>
 754:	23 2d       	mov	r18, r3
 756:	20 61       	ori	r18, 0x10	; 16
 758:	1d c0       	rjmp	.+58     	; 0x794 <vfprintf+0xd6>
 75a:	8d 32       	cpi	r24, 0x2D	; 45
 75c:	61 f0       	breq	.+24     	; 0x776 <vfprintf+0xb8>
 75e:	80 33       	cpi	r24, 0x30	; 48
 760:	69 f4       	brne	.+26     	; 0x77c <vfprintf+0xbe>
 762:	23 2d       	mov	r18, r3
 764:	21 60       	ori	r18, 0x01	; 1
 766:	16 c0       	rjmp	.+44     	; 0x794 <vfprintf+0xd6>
 768:	83 2d       	mov	r24, r3
 76a:	82 60       	ori	r24, 0x02	; 2
 76c:	38 2e       	mov	r3, r24
 76e:	e3 2d       	mov	r30, r3
 770:	e4 60       	ori	r30, 0x04	; 4
 772:	3e 2e       	mov	r3, r30
 774:	2a c0       	rjmp	.+84     	; 0x7ca <vfprintf+0x10c>
 776:	f3 2d       	mov	r31, r3
 778:	f8 60       	ori	r31, 0x08	; 8
 77a:	1d c0       	rjmp	.+58     	; 0x7b6 <vfprintf+0xf8>
 77c:	37 fc       	sbrc	r3, 7
 77e:	2d c0       	rjmp	.+90     	; 0x7da <vfprintf+0x11c>
 780:	20 ed       	ldi	r18, 0xD0	; 208
 782:	28 0f       	add	r18, r24
 784:	2a 30       	cpi	r18, 0x0A	; 10
 786:	40 f0       	brcs	.+16     	; 0x798 <vfprintf+0xda>
 788:	8e 32       	cpi	r24, 0x2E	; 46
 78a:	b9 f4       	brne	.+46     	; 0x7ba <vfprintf+0xfc>
 78c:	36 fc       	sbrc	r3, 6
 78e:	75 c1       	rjmp	.+746    	; 0xa7a <vfprintf+0x3bc>
 790:	23 2d       	mov	r18, r3
 792:	20 64       	ori	r18, 0x40	; 64
 794:	32 2e       	mov	r3, r18
 796:	19 c0       	rjmp	.+50     	; 0x7ca <vfprintf+0x10c>
 798:	36 fe       	sbrs	r3, 6
 79a:	06 c0       	rjmp	.+12     	; 0x7a8 <vfprintf+0xea>
 79c:	8a e0       	ldi	r24, 0x0A	; 10
 79e:	98 9e       	mul	r9, r24
 7a0:	20 0d       	add	r18, r0
 7a2:	11 24       	eor	r1, r1
 7a4:	92 2e       	mov	r9, r18
 7a6:	11 c0       	rjmp	.+34     	; 0x7ca <vfprintf+0x10c>
 7a8:	ea e0       	ldi	r30, 0x0A	; 10
 7aa:	2e 9e       	mul	r2, r30
 7ac:	20 0d       	add	r18, r0
 7ae:	11 24       	eor	r1, r1
 7b0:	22 2e       	mov	r2, r18
 7b2:	f3 2d       	mov	r31, r3
 7b4:	f0 62       	ori	r31, 0x20	; 32
 7b6:	3f 2e       	mov	r3, r31
 7b8:	08 c0       	rjmp	.+16     	; 0x7ca <vfprintf+0x10c>
 7ba:	8c 36       	cpi	r24, 0x6C	; 108
 7bc:	21 f4       	brne	.+8      	; 0x7c6 <vfprintf+0x108>
 7be:	83 2d       	mov	r24, r3
 7c0:	80 68       	ori	r24, 0x80	; 128
 7c2:	38 2e       	mov	r3, r24
 7c4:	02 c0       	rjmp	.+4      	; 0x7ca <vfprintf+0x10c>
 7c6:	88 36       	cpi	r24, 0x68	; 104
 7c8:	41 f4       	brne	.+16     	; 0x7da <vfprintf+0x11c>
 7ca:	f7 01       	movw	r30, r14
 7cc:	93 fd       	sbrc	r25, 3
 7ce:	85 91       	lpm	r24, Z+
 7d0:	93 ff       	sbrs	r25, 3
 7d2:	81 91       	ld	r24, Z+
 7d4:	7f 01       	movw	r14, r30
 7d6:	81 11       	cpse	r24, r1
 7d8:	b3 cf       	rjmp	.-154    	; 0x740 <vfprintf+0x82>
 7da:	98 2f       	mov	r25, r24
 7dc:	9f 7d       	andi	r25, 0xDF	; 223
 7de:	95 54       	subi	r25, 0x45	; 69
 7e0:	93 30       	cpi	r25, 0x03	; 3
 7e2:	28 f4       	brcc	.+10     	; 0x7ee <vfprintf+0x130>
 7e4:	0c 5f       	subi	r16, 0xFC	; 252
 7e6:	1f 4f       	sbci	r17, 0xFF	; 255
 7e8:	9f e3       	ldi	r25, 0x3F	; 63
 7ea:	99 83       	std	Y+1, r25	; 0x01
 7ec:	0d c0       	rjmp	.+26     	; 0x808 <vfprintf+0x14a>
 7ee:	83 36       	cpi	r24, 0x63	; 99
 7f0:	31 f0       	breq	.+12     	; 0x7fe <vfprintf+0x140>
 7f2:	83 37       	cpi	r24, 0x73	; 115
 7f4:	71 f0       	breq	.+28     	; 0x812 <vfprintf+0x154>
 7f6:	83 35       	cpi	r24, 0x53	; 83
 7f8:	09 f0       	breq	.+2      	; 0x7fc <vfprintf+0x13e>
 7fa:	55 c0       	rjmp	.+170    	; 0x8a6 <vfprintf+0x1e8>
 7fc:	20 c0       	rjmp	.+64     	; 0x83e <vfprintf+0x180>
 7fe:	f8 01       	movw	r30, r16
 800:	80 81       	ld	r24, Z
 802:	89 83       	std	Y+1, r24	; 0x01
 804:	0e 5f       	subi	r16, 0xFE	; 254
 806:	1f 4f       	sbci	r17, 0xFF	; 255
 808:	88 24       	eor	r8, r8
 80a:	83 94       	inc	r8
 80c:	91 2c       	mov	r9, r1
 80e:	53 01       	movw	r10, r6
 810:	12 c0       	rjmp	.+36     	; 0x836 <vfprintf+0x178>
 812:	28 01       	movw	r4, r16
 814:	f2 e0       	ldi	r31, 0x02	; 2
 816:	4f 0e       	add	r4, r31
 818:	51 1c       	adc	r5, r1
 81a:	f8 01       	movw	r30, r16
 81c:	a0 80       	ld	r10, Z
 81e:	b1 80       	ldd	r11, Z+1	; 0x01
 820:	36 fe       	sbrs	r3, 6
 822:	03 c0       	rjmp	.+6      	; 0x82a <vfprintf+0x16c>
 824:	69 2d       	mov	r22, r9
 826:	70 e0       	ldi	r23, 0x00	; 0
 828:	02 c0       	rjmp	.+4      	; 0x82e <vfprintf+0x170>
 82a:	6f ef       	ldi	r22, 0xFF	; 255
 82c:	7f ef       	ldi	r23, 0xFF	; 255
 82e:	c5 01       	movw	r24, r10
 830:	4e d1       	rcall	.+668    	; 0xace <strnlen>
 832:	4c 01       	movw	r8, r24
 834:	82 01       	movw	r16, r4
 836:	f3 2d       	mov	r31, r3
 838:	ff 77       	andi	r31, 0x7F	; 127
 83a:	3f 2e       	mov	r3, r31
 83c:	15 c0       	rjmp	.+42     	; 0x868 <vfprintf+0x1aa>
 83e:	28 01       	movw	r4, r16
 840:	22 e0       	ldi	r18, 0x02	; 2
 842:	42 0e       	add	r4, r18
 844:	51 1c       	adc	r5, r1
 846:	f8 01       	movw	r30, r16
 848:	a0 80       	ld	r10, Z
 84a:	b1 80       	ldd	r11, Z+1	; 0x01
 84c:	36 fe       	sbrs	r3, 6
 84e:	03 c0       	rjmp	.+6      	; 0x856 <vfprintf+0x198>
 850:	69 2d       	mov	r22, r9
 852:	70 e0       	ldi	r23, 0x00	; 0
 854:	02 c0       	rjmp	.+4      	; 0x85a <vfprintf+0x19c>
 856:	6f ef       	ldi	r22, 0xFF	; 255
 858:	7f ef       	ldi	r23, 0xFF	; 255
 85a:	c5 01       	movw	r24, r10
 85c:	2d d1       	rcall	.+602    	; 0xab8 <strnlen_P>
 85e:	4c 01       	movw	r8, r24
 860:	f3 2d       	mov	r31, r3
 862:	f0 68       	ori	r31, 0x80	; 128
 864:	3f 2e       	mov	r3, r31
 866:	82 01       	movw	r16, r4
 868:	33 fc       	sbrc	r3, 3
 86a:	19 c0       	rjmp	.+50     	; 0x89e <vfprintf+0x1e0>
 86c:	82 2d       	mov	r24, r2
 86e:	90 e0       	ldi	r25, 0x00	; 0
 870:	88 16       	cp	r8, r24
 872:	99 06       	cpc	r9, r25
 874:	a0 f4       	brcc	.+40     	; 0x89e <vfprintf+0x1e0>
 876:	b6 01       	movw	r22, r12
 878:	80 e2       	ldi	r24, 0x20	; 32
 87a:	90 e0       	ldi	r25, 0x00	; 0
 87c:	33 d1       	rcall	.+614    	; 0xae4 <fputc>
 87e:	2a 94       	dec	r2
 880:	f5 cf       	rjmp	.-22     	; 0x86c <vfprintf+0x1ae>
 882:	f5 01       	movw	r30, r10
 884:	37 fc       	sbrc	r3, 7
 886:	85 91       	lpm	r24, Z+
 888:	37 fe       	sbrs	r3, 7
 88a:	81 91       	ld	r24, Z+
 88c:	5f 01       	movw	r10, r30
 88e:	b6 01       	movw	r22, r12
 890:	90 e0       	ldi	r25, 0x00	; 0
 892:	28 d1       	rcall	.+592    	; 0xae4 <fputc>
 894:	21 10       	cpse	r2, r1
 896:	2a 94       	dec	r2
 898:	21 e0       	ldi	r18, 0x01	; 1
 89a:	82 1a       	sub	r8, r18
 89c:	91 08       	sbc	r9, r1
 89e:	81 14       	cp	r8, r1
 8a0:	91 04       	cpc	r9, r1
 8a2:	79 f7       	brne	.-34     	; 0x882 <vfprintf+0x1c4>
 8a4:	e1 c0       	rjmp	.+450    	; 0xa68 <vfprintf+0x3aa>
 8a6:	84 36       	cpi	r24, 0x64	; 100
 8a8:	11 f0       	breq	.+4      	; 0x8ae <vfprintf+0x1f0>
 8aa:	89 36       	cpi	r24, 0x69	; 105
 8ac:	39 f5       	brne	.+78     	; 0x8fc <vfprintf+0x23e>
 8ae:	f8 01       	movw	r30, r16
 8b0:	37 fe       	sbrs	r3, 7
 8b2:	07 c0       	rjmp	.+14     	; 0x8c2 <vfprintf+0x204>
 8b4:	60 81       	ld	r22, Z
 8b6:	71 81       	ldd	r23, Z+1	; 0x01
 8b8:	82 81       	ldd	r24, Z+2	; 0x02
 8ba:	93 81       	ldd	r25, Z+3	; 0x03
 8bc:	0c 5f       	subi	r16, 0xFC	; 252
 8be:	1f 4f       	sbci	r17, 0xFF	; 255
 8c0:	08 c0       	rjmp	.+16     	; 0x8d2 <vfprintf+0x214>
 8c2:	60 81       	ld	r22, Z
 8c4:	71 81       	ldd	r23, Z+1	; 0x01
 8c6:	07 2e       	mov	r0, r23
 8c8:	00 0c       	add	r0, r0
 8ca:	88 0b       	sbc	r24, r24
 8cc:	99 0b       	sbc	r25, r25
 8ce:	0e 5f       	subi	r16, 0xFE	; 254
 8d0:	1f 4f       	sbci	r17, 0xFF	; 255
 8d2:	f3 2d       	mov	r31, r3
 8d4:	ff 76       	andi	r31, 0x6F	; 111
 8d6:	3f 2e       	mov	r3, r31
 8d8:	97 ff       	sbrs	r25, 7
 8da:	09 c0       	rjmp	.+18     	; 0x8ee <vfprintf+0x230>
 8dc:	90 95       	com	r25
 8de:	80 95       	com	r24
 8e0:	70 95       	com	r23
 8e2:	61 95       	neg	r22
 8e4:	7f 4f       	sbci	r23, 0xFF	; 255
 8e6:	8f 4f       	sbci	r24, 0xFF	; 255
 8e8:	9f 4f       	sbci	r25, 0xFF	; 255
 8ea:	f0 68       	ori	r31, 0x80	; 128
 8ec:	3f 2e       	mov	r3, r31
 8ee:	2a e0       	ldi	r18, 0x0A	; 10
 8f0:	30 e0       	ldi	r19, 0x00	; 0
 8f2:	a3 01       	movw	r20, r6
 8f4:	33 d1       	rcall	.+614    	; 0xb5c <__ultoa_invert>
 8f6:	88 2e       	mov	r8, r24
 8f8:	86 18       	sub	r8, r6
 8fa:	44 c0       	rjmp	.+136    	; 0x984 <vfprintf+0x2c6>
 8fc:	85 37       	cpi	r24, 0x75	; 117
 8fe:	31 f4       	brne	.+12     	; 0x90c <vfprintf+0x24e>
 900:	23 2d       	mov	r18, r3
 902:	2f 7e       	andi	r18, 0xEF	; 239
 904:	b2 2e       	mov	r11, r18
 906:	2a e0       	ldi	r18, 0x0A	; 10
 908:	30 e0       	ldi	r19, 0x00	; 0
 90a:	25 c0       	rjmp	.+74     	; 0x956 <vfprintf+0x298>
 90c:	93 2d       	mov	r25, r3
 90e:	99 7f       	andi	r25, 0xF9	; 249
 910:	b9 2e       	mov	r11, r25
 912:	8f 36       	cpi	r24, 0x6F	; 111
 914:	c1 f0       	breq	.+48     	; 0x946 <vfprintf+0x288>
 916:	18 f4       	brcc	.+6      	; 0x91e <vfprintf+0x260>
 918:	88 35       	cpi	r24, 0x58	; 88
 91a:	79 f0       	breq	.+30     	; 0x93a <vfprintf+0x27c>
 91c:	ae c0       	rjmp	.+348    	; 0xa7a <vfprintf+0x3bc>
 91e:	80 37       	cpi	r24, 0x70	; 112
 920:	19 f0       	breq	.+6      	; 0x928 <vfprintf+0x26a>
 922:	88 37       	cpi	r24, 0x78	; 120
 924:	21 f0       	breq	.+8      	; 0x92e <vfprintf+0x270>
 926:	a9 c0       	rjmp	.+338    	; 0xa7a <vfprintf+0x3bc>
 928:	e9 2f       	mov	r30, r25
 92a:	e0 61       	ori	r30, 0x10	; 16
 92c:	be 2e       	mov	r11, r30
 92e:	b4 fe       	sbrs	r11, 4
 930:	0d c0       	rjmp	.+26     	; 0x94c <vfprintf+0x28e>
 932:	fb 2d       	mov	r31, r11
 934:	f4 60       	ori	r31, 0x04	; 4
 936:	bf 2e       	mov	r11, r31
 938:	09 c0       	rjmp	.+18     	; 0x94c <vfprintf+0x28e>
 93a:	34 fe       	sbrs	r3, 4
 93c:	0a c0       	rjmp	.+20     	; 0x952 <vfprintf+0x294>
 93e:	29 2f       	mov	r18, r25
 940:	26 60       	ori	r18, 0x06	; 6
 942:	b2 2e       	mov	r11, r18
 944:	06 c0       	rjmp	.+12     	; 0x952 <vfprintf+0x294>
 946:	28 e0       	ldi	r18, 0x08	; 8
 948:	30 e0       	ldi	r19, 0x00	; 0
 94a:	05 c0       	rjmp	.+10     	; 0x956 <vfprintf+0x298>
 94c:	20 e1       	ldi	r18, 0x10	; 16
 94e:	30 e0       	ldi	r19, 0x00	; 0
 950:	02 c0       	rjmp	.+4      	; 0x956 <vfprintf+0x298>
 952:	20 e1       	ldi	r18, 0x10	; 16
 954:	32 e0       	ldi	r19, 0x02	; 2
 956:	f8 01       	movw	r30, r16
 958:	b7 fe       	sbrs	r11, 7
 95a:	07 c0       	rjmp	.+14     	; 0x96a <vfprintf+0x2ac>
 95c:	60 81       	ld	r22, Z
 95e:	71 81       	ldd	r23, Z+1	; 0x01
 960:	82 81       	ldd	r24, Z+2	; 0x02
 962:	93 81       	ldd	r25, Z+3	; 0x03
 964:	0c 5f       	subi	r16, 0xFC	; 252
 966:	1f 4f       	sbci	r17, 0xFF	; 255
 968:	06 c0       	rjmp	.+12     	; 0x976 <vfprintf+0x2b8>
 96a:	60 81       	ld	r22, Z
 96c:	71 81       	ldd	r23, Z+1	; 0x01
 96e:	80 e0       	ldi	r24, 0x00	; 0
 970:	90 e0       	ldi	r25, 0x00	; 0
 972:	0e 5f       	subi	r16, 0xFE	; 254
 974:	1f 4f       	sbci	r17, 0xFF	; 255
 976:	a3 01       	movw	r20, r6
 978:	f1 d0       	rcall	.+482    	; 0xb5c <__ultoa_invert>
 97a:	88 2e       	mov	r8, r24
 97c:	86 18       	sub	r8, r6
 97e:	fb 2d       	mov	r31, r11
 980:	ff 77       	andi	r31, 0x7F	; 127
 982:	3f 2e       	mov	r3, r31
 984:	36 fe       	sbrs	r3, 6
 986:	0d c0       	rjmp	.+26     	; 0x9a2 <vfprintf+0x2e4>
 988:	23 2d       	mov	r18, r3
 98a:	2e 7f       	andi	r18, 0xFE	; 254
 98c:	a2 2e       	mov	r10, r18
 98e:	89 14       	cp	r8, r9
 990:	58 f4       	brcc	.+22     	; 0x9a8 <vfprintf+0x2ea>
 992:	34 fe       	sbrs	r3, 4
 994:	0b c0       	rjmp	.+22     	; 0x9ac <vfprintf+0x2ee>
 996:	32 fc       	sbrc	r3, 2
 998:	09 c0       	rjmp	.+18     	; 0x9ac <vfprintf+0x2ee>
 99a:	83 2d       	mov	r24, r3
 99c:	8e 7e       	andi	r24, 0xEE	; 238
 99e:	a8 2e       	mov	r10, r24
 9a0:	05 c0       	rjmp	.+10     	; 0x9ac <vfprintf+0x2ee>
 9a2:	b8 2c       	mov	r11, r8
 9a4:	a3 2c       	mov	r10, r3
 9a6:	03 c0       	rjmp	.+6      	; 0x9ae <vfprintf+0x2f0>
 9a8:	b8 2c       	mov	r11, r8
 9aa:	01 c0       	rjmp	.+2      	; 0x9ae <vfprintf+0x2f0>
 9ac:	b9 2c       	mov	r11, r9
 9ae:	a4 fe       	sbrs	r10, 4
 9b0:	0f c0       	rjmp	.+30     	; 0x9d0 <vfprintf+0x312>
 9b2:	fe 01       	movw	r30, r28
 9b4:	e8 0d       	add	r30, r8
 9b6:	f1 1d       	adc	r31, r1
 9b8:	80 81       	ld	r24, Z
 9ba:	80 33       	cpi	r24, 0x30	; 48
 9bc:	21 f4       	brne	.+8      	; 0x9c6 <vfprintf+0x308>
 9be:	9a 2d       	mov	r25, r10
 9c0:	99 7e       	andi	r25, 0xE9	; 233
 9c2:	a9 2e       	mov	r10, r25
 9c4:	09 c0       	rjmp	.+18     	; 0x9d8 <vfprintf+0x31a>
 9c6:	a2 fe       	sbrs	r10, 2
 9c8:	06 c0       	rjmp	.+12     	; 0x9d6 <vfprintf+0x318>
 9ca:	b3 94       	inc	r11
 9cc:	b3 94       	inc	r11
 9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <vfprintf+0x31a>
 9d0:	8a 2d       	mov	r24, r10
 9d2:	86 78       	andi	r24, 0x86	; 134
 9d4:	09 f0       	breq	.+2      	; 0x9d8 <vfprintf+0x31a>
 9d6:	b3 94       	inc	r11
 9d8:	a3 fc       	sbrc	r10, 3
 9da:	10 c0       	rjmp	.+32     	; 0x9fc <vfprintf+0x33e>
 9dc:	a0 fe       	sbrs	r10, 0
 9de:	06 c0       	rjmp	.+12     	; 0x9ec <vfprintf+0x32e>
 9e0:	b2 14       	cp	r11, r2
 9e2:	80 f4       	brcc	.+32     	; 0xa04 <vfprintf+0x346>
 9e4:	28 0c       	add	r2, r8
 9e6:	92 2c       	mov	r9, r2
 9e8:	9b 18       	sub	r9, r11
 9ea:	0d c0       	rjmp	.+26     	; 0xa06 <vfprintf+0x348>
 9ec:	b2 14       	cp	r11, r2
 9ee:	58 f4       	brcc	.+22     	; 0xa06 <vfprintf+0x348>
 9f0:	b6 01       	movw	r22, r12
 9f2:	80 e2       	ldi	r24, 0x20	; 32
 9f4:	90 e0       	ldi	r25, 0x00	; 0
 9f6:	76 d0       	rcall	.+236    	; 0xae4 <fputc>
 9f8:	b3 94       	inc	r11
 9fa:	f8 cf       	rjmp	.-16     	; 0x9ec <vfprintf+0x32e>
 9fc:	b2 14       	cp	r11, r2
 9fe:	18 f4       	brcc	.+6      	; 0xa06 <vfprintf+0x348>
 a00:	2b 18       	sub	r2, r11
 a02:	02 c0       	rjmp	.+4      	; 0xa08 <vfprintf+0x34a>
 a04:	98 2c       	mov	r9, r8
 a06:	21 2c       	mov	r2, r1
 a08:	a4 fe       	sbrs	r10, 4
 a0a:	0f c0       	rjmp	.+30     	; 0xa2a <vfprintf+0x36c>
 a0c:	b6 01       	movw	r22, r12
 a0e:	80 e3       	ldi	r24, 0x30	; 48
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	68 d0       	rcall	.+208    	; 0xae4 <fputc>
 a14:	a2 fe       	sbrs	r10, 2
 a16:	16 c0       	rjmp	.+44     	; 0xa44 <vfprintf+0x386>
 a18:	a1 fc       	sbrc	r10, 1
 a1a:	03 c0       	rjmp	.+6      	; 0xa22 <vfprintf+0x364>
 a1c:	88 e7       	ldi	r24, 0x78	; 120
 a1e:	90 e0       	ldi	r25, 0x00	; 0
 a20:	02 c0       	rjmp	.+4      	; 0xa26 <vfprintf+0x368>
 a22:	88 e5       	ldi	r24, 0x58	; 88
 a24:	90 e0       	ldi	r25, 0x00	; 0
 a26:	b6 01       	movw	r22, r12
 a28:	0c c0       	rjmp	.+24     	; 0xa42 <vfprintf+0x384>
 a2a:	8a 2d       	mov	r24, r10
 a2c:	86 78       	andi	r24, 0x86	; 134
 a2e:	51 f0       	breq	.+20     	; 0xa44 <vfprintf+0x386>
 a30:	a1 fe       	sbrs	r10, 1
 a32:	02 c0       	rjmp	.+4      	; 0xa38 <vfprintf+0x37a>
 a34:	8b e2       	ldi	r24, 0x2B	; 43
 a36:	01 c0       	rjmp	.+2      	; 0xa3a <vfprintf+0x37c>
 a38:	80 e2       	ldi	r24, 0x20	; 32
 a3a:	a7 fc       	sbrc	r10, 7
 a3c:	8d e2       	ldi	r24, 0x2D	; 45
 a3e:	b6 01       	movw	r22, r12
 a40:	90 e0       	ldi	r25, 0x00	; 0
 a42:	50 d0       	rcall	.+160    	; 0xae4 <fputc>
 a44:	89 14       	cp	r8, r9
 a46:	30 f4       	brcc	.+12     	; 0xa54 <vfprintf+0x396>
 a48:	b6 01       	movw	r22, r12
 a4a:	80 e3       	ldi	r24, 0x30	; 48
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	4a d0       	rcall	.+148    	; 0xae4 <fputc>
 a50:	9a 94       	dec	r9
 a52:	f8 cf       	rjmp	.-16     	; 0xa44 <vfprintf+0x386>
 a54:	8a 94       	dec	r8
 a56:	f3 01       	movw	r30, r6
 a58:	e8 0d       	add	r30, r8
 a5a:	f1 1d       	adc	r31, r1
 a5c:	80 81       	ld	r24, Z
 a5e:	b6 01       	movw	r22, r12
 a60:	90 e0       	ldi	r25, 0x00	; 0
 a62:	40 d0       	rcall	.+128    	; 0xae4 <fputc>
 a64:	81 10       	cpse	r8, r1
 a66:	f6 cf       	rjmp	.-20     	; 0xa54 <vfprintf+0x396>
 a68:	22 20       	and	r2, r2
 a6a:	09 f4       	brne	.+2      	; 0xa6e <vfprintf+0x3b0>
 a6c:	4e ce       	rjmp	.-868    	; 0x70a <vfprintf+0x4c>
 a6e:	b6 01       	movw	r22, r12
 a70:	80 e2       	ldi	r24, 0x20	; 32
 a72:	90 e0       	ldi	r25, 0x00	; 0
 a74:	37 d0       	rcall	.+110    	; 0xae4 <fputc>
 a76:	2a 94       	dec	r2
 a78:	f7 cf       	rjmp	.-18     	; 0xa68 <vfprintf+0x3aa>
 a7a:	f6 01       	movw	r30, r12
 a7c:	86 81       	ldd	r24, Z+6	; 0x06
 a7e:	97 81       	ldd	r25, Z+7	; 0x07
 a80:	02 c0       	rjmp	.+4      	; 0xa86 <vfprintf+0x3c8>
 a82:	8f ef       	ldi	r24, 0xFF	; 255
 a84:	9f ef       	ldi	r25, 0xFF	; 255
 a86:	2b 96       	adiw	r28, 0x0b	; 11
 a88:	0f b6       	in	r0, 0x3f	; 63
 a8a:	f8 94       	cli
 a8c:	de bf       	out	0x3e, r29	; 62
 a8e:	0f be       	out	0x3f, r0	; 63
 a90:	cd bf       	out	0x3d, r28	; 61
 a92:	df 91       	pop	r29
 a94:	cf 91       	pop	r28
 a96:	1f 91       	pop	r17
 a98:	0f 91       	pop	r16
 a9a:	ff 90       	pop	r15
 a9c:	ef 90       	pop	r14
 a9e:	df 90       	pop	r13
 aa0:	cf 90       	pop	r12
 aa2:	bf 90       	pop	r11
 aa4:	af 90       	pop	r10
 aa6:	9f 90       	pop	r9
 aa8:	8f 90       	pop	r8
 aaa:	7f 90       	pop	r7
 aac:	6f 90       	pop	r6
 aae:	5f 90       	pop	r5
 ab0:	4f 90       	pop	r4
 ab2:	3f 90       	pop	r3
 ab4:	2f 90       	pop	r2
 ab6:	08 95       	ret

00000ab8 <strnlen_P>:
 ab8:	fc 01       	movw	r30, r24
 aba:	05 90       	lpm	r0, Z+
 abc:	61 50       	subi	r22, 0x01	; 1
 abe:	70 40       	sbci	r23, 0x00	; 0
 ac0:	01 10       	cpse	r0, r1
 ac2:	d8 f7       	brcc	.-10     	; 0xaba <strnlen_P+0x2>
 ac4:	80 95       	com	r24
 ac6:	90 95       	com	r25
 ac8:	8e 0f       	add	r24, r30
 aca:	9f 1f       	adc	r25, r31
 acc:	08 95       	ret

00000ace <strnlen>:
 ace:	fc 01       	movw	r30, r24
 ad0:	61 50       	subi	r22, 0x01	; 1
 ad2:	70 40       	sbci	r23, 0x00	; 0
 ad4:	01 90       	ld	r0, Z+
 ad6:	01 10       	cpse	r0, r1
 ad8:	d8 f7       	brcc	.-10     	; 0xad0 <strnlen+0x2>
 ada:	80 95       	com	r24
 adc:	90 95       	com	r25
 ade:	8e 0f       	add	r24, r30
 ae0:	9f 1f       	adc	r25, r31
 ae2:	08 95       	ret

00000ae4 <fputc>:
 ae4:	0f 93       	push	r16
 ae6:	1f 93       	push	r17
 ae8:	cf 93       	push	r28
 aea:	df 93       	push	r29
 aec:	fb 01       	movw	r30, r22
 aee:	23 81       	ldd	r18, Z+3	; 0x03
 af0:	21 fd       	sbrc	r18, 1
 af2:	03 c0       	rjmp	.+6      	; 0xafa <fputc+0x16>
 af4:	8f ef       	ldi	r24, 0xFF	; 255
 af6:	9f ef       	ldi	r25, 0xFF	; 255
 af8:	2c c0       	rjmp	.+88     	; 0xb52 <fputc+0x6e>
 afa:	22 ff       	sbrs	r18, 2
 afc:	16 c0       	rjmp	.+44     	; 0xb2a <fputc+0x46>
 afe:	46 81       	ldd	r20, Z+6	; 0x06
 b00:	57 81       	ldd	r21, Z+7	; 0x07
 b02:	24 81       	ldd	r18, Z+4	; 0x04
 b04:	35 81       	ldd	r19, Z+5	; 0x05
 b06:	42 17       	cp	r20, r18
 b08:	53 07       	cpc	r21, r19
 b0a:	44 f4       	brge	.+16     	; 0xb1c <fputc+0x38>
 b0c:	a0 81       	ld	r26, Z
 b0e:	b1 81       	ldd	r27, Z+1	; 0x01
 b10:	9d 01       	movw	r18, r26
 b12:	2f 5f       	subi	r18, 0xFF	; 255
 b14:	3f 4f       	sbci	r19, 0xFF	; 255
 b16:	31 83       	std	Z+1, r19	; 0x01
 b18:	20 83       	st	Z, r18
 b1a:	8c 93       	st	X, r24
 b1c:	26 81       	ldd	r18, Z+6	; 0x06
 b1e:	37 81       	ldd	r19, Z+7	; 0x07
 b20:	2f 5f       	subi	r18, 0xFF	; 255
 b22:	3f 4f       	sbci	r19, 0xFF	; 255
 b24:	37 83       	std	Z+7, r19	; 0x07
 b26:	26 83       	std	Z+6, r18	; 0x06
 b28:	14 c0       	rjmp	.+40     	; 0xb52 <fputc+0x6e>
 b2a:	8b 01       	movw	r16, r22
 b2c:	ec 01       	movw	r28, r24
 b2e:	fb 01       	movw	r30, r22
 b30:	00 84       	ldd	r0, Z+8	; 0x08
 b32:	f1 85       	ldd	r31, Z+9	; 0x09
 b34:	e0 2d       	mov	r30, r0
 b36:	09 95       	icall
 b38:	89 2b       	or	r24, r25
 b3a:	e1 f6       	brne	.-72     	; 0xaf4 <fputc+0x10>
 b3c:	d8 01       	movw	r26, r16
 b3e:	16 96       	adiw	r26, 0x06	; 6
 b40:	8d 91       	ld	r24, X+
 b42:	9c 91       	ld	r25, X
 b44:	17 97       	sbiw	r26, 0x07	; 7
 b46:	01 96       	adiw	r24, 0x01	; 1
 b48:	17 96       	adiw	r26, 0x07	; 7
 b4a:	9c 93       	st	X, r25
 b4c:	8e 93       	st	-X, r24
 b4e:	16 97       	sbiw	r26, 0x06	; 6
 b50:	ce 01       	movw	r24, r28
 b52:	df 91       	pop	r29
 b54:	cf 91       	pop	r28
 b56:	1f 91       	pop	r17
 b58:	0f 91       	pop	r16
 b5a:	08 95       	ret

00000b5c <__ultoa_invert>:
 b5c:	fa 01       	movw	r30, r20
 b5e:	aa 27       	eor	r26, r26
 b60:	28 30       	cpi	r18, 0x08	; 8
 b62:	51 f1       	breq	.+84     	; 0xbb8 <__ultoa_invert+0x5c>
 b64:	20 31       	cpi	r18, 0x10	; 16
 b66:	81 f1       	breq	.+96     	; 0xbc8 <__ultoa_invert+0x6c>
 b68:	e8 94       	clt
 b6a:	6f 93       	push	r22
 b6c:	6e 7f       	andi	r22, 0xFE	; 254
 b6e:	6e 5f       	subi	r22, 0xFE	; 254
 b70:	7f 4f       	sbci	r23, 0xFF	; 255
 b72:	8f 4f       	sbci	r24, 0xFF	; 255
 b74:	9f 4f       	sbci	r25, 0xFF	; 255
 b76:	af 4f       	sbci	r26, 0xFF	; 255
 b78:	b1 e0       	ldi	r27, 0x01	; 1
 b7a:	3e d0       	rcall	.+124    	; 0xbf8 <__ultoa_invert+0x9c>
 b7c:	b4 e0       	ldi	r27, 0x04	; 4
 b7e:	3c d0       	rcall	.+120    	; 0xbf8 <__ultoa_invert+0x9c>
 b80:	67 0f       	add	r22, r23
 b82:	78 1f       	adc	r23, r24
 b84:	89 1f       	adc	r24, r25
 b86:	9a 1f       	adc	r25, r26
 b88:	a1 1d       	adc	r26, r1
 b8a:	68 0f       	add	r22, r24
 b8c:	79 1f       	adc	r23, r25
 b8e:	8a 1f       	adc	r24, r26
 b90:	91 1d       	adc	r25, r1
 b92:	a1 1d       	adc	r26, r1
 b94:	6a 0f       	add	r22, r26
 b96:	71 1d       	adc	r23, r1
 b98:	81 1d       	adc	r24, r1
 b9a:	91 1d       	adc	r25, r1
 b9c:	a1 1d       	adc	r26, r1
 b9e:	20 d0       	rcall	.+64     	; 0xbe0 <__ultoa_invert+0x84>
 ba0:	09 f4       	brne	.+2      	; 0xba4 <__ultoa_invert+0x48>
 ba2:	68 94       	set
 ba4:	3f 91       	pop	r19
 ba6:	2a e0       	ldi	r18, 0x0A	; 10
 ba8:	26 9f       	mul	r18, r22
 baa:	11 24       	eor	r1, r1
 bac:	30 19       	sub	r19, r0
 bae:	30 5d       	subi	r19, 0xD0	; 208
 bb0:	31 93       	st	Z+, r19
 bb2:	de f6       	brtc	.-74     	; 0xb6a <__ultoa_invert+0xe>
 bb4:	cf 01       	movw	r24, r30
 bb6:	08 95       	ret
 bb8:	46 2f       	mov	r20, r22
 bba:	47 70       	andi	r20, 0x07	; 7
 bbc:	40 5d       	subi	r20, 0xD0	; 208
 bbe:	41 93       	st	Z+, r20
 bc0:	b3 e0       	ldi	r27, 0x03	; 3
 bc2:	0f d0       	rcall	.+30     	; 0xbe2 <__ultoa_invert+0x86>
 bc4:	c9 f7       	brne	.-14     	; 0xbb8 <__ultoa_invert+0x5c>
 bc6:	f6 cf       	rjmp	.-20     	; 0xbb4 <__ultoa_invert+0x58>
 bc8:	46 2f       	mov	r20, r22
 bca:	4f 70       	andi	r20, 0x0F	; 15
 bcc:	40 5d       	subi	r20, 0xD0	; 208
 bce:	4a 33       	cpi	r20, 0x3A	; 58
 bd0:	18 f0       	brcs	.+6      	; 0xbd8 <__ultoa_invert+0x7c>
 bd2:	49 5d       	subi	r20, 0xD9	; 217
 bd4:	31 fd       	sbrc	r19, 1
 bd6:	40 52       	subi	r20, 0x20	; 32
 bd8:	41 93       	st	Z+, r20
 bda:	02 d0       	rcall	.+4      	; 0xbe0 <__ultoa_invert+0x84>
 bdc:	a9 f7       	brne	.-22     	; 0xbc8 <__ultoa_invert+0x6c>
 bde:	ea cf       	rjmp	.-44     	; 0xbb4 <__ultoa_invert+0x58>
 be0:	b4 e0       	ldi	r27, 0x04	; 4
 be2:	a6 95       	lsr	r26
 be4:	97 95       	ror	r25
 be6:	87 95       	ror	r24
 be8:	77 95       	ror	r23
 bea:	67 95       	ror	r22
 bec:	ba 95       	dec	r27
 bee:	c9 f7       	brne	.-14     	; 0xbe2 <__ultoa_invert+0x86>
 bf0:	00 97       	sbiw	r24, 0x00	; 0
 bf2:	61 05       	cpc	r22, r1
 bf4:	71 05       	cpc	r23, r1
 bf6:	08 95       	ret
 bf8:	9b 01       	movw	r18, r22
 bfa:	ac 01       	movw	r20, r24
 bfc:	0a 2e       	mov	r0, r26
 bfe:	06 94       	lsr	r0
 c00:	57 95       	ror	r21
 c02:	47 95       	ror	r20
 c04:	37 95       	ror	r19
 c06:	27 95       	ror	r18
 c08:	ba 95       	dec	r27
 c0a:	c9 f7       	brne	.-14     	; 0xbfe <__ultoa_invert+0xa2>
 c0c:	62 0f       	add	r22, r18
 c0e:	73 1f       	adc	r23, r19
 c10:	84 1f       	adc	r24, r20
 c12:	95 1f       	adc	r25, r21
 c14:	a0 1d       	adc	r26, r0
 c16:	08 95       	ret

00000c18 <_exit>:
 c18:	f8 94       	cli

00000c1a <__stop_program>:
 c1a:	ff cf       	rjmp	.-2      	; 0xc1a <__stop_program>
