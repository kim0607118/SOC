
20240524.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000178  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000098d  00000000  00000000  0000026c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007f3  00000000  00000000  00000bf9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000475  00000000  00000000  000013ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  00001864  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003cc  00000000  00000000  000018bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000c2  00000000  00000000  00001c88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001d4a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	27 d0       	rcall	.+78     	; 0xe8 <main>
  9a:	6c c0       	rjmp	.+216    	; 0x174 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <delay_us>:

#include <avr/io.h>
void delay_us(unsigned char time_us)
{
	register unsigned char i;
	for(i=0;i<time_us;i++) //4 cycle
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	07 c0       	rjmp	.+14     	; 0xb0 <delay_us+0x12>
	{
		asm volatile("PUSH R0"); //2 cycle
  a2:	0f 92       	push	r0
		asm volatile("POP R0"); //2 cycle
  a4:	0f 90       	pop	r0
		asm volatile("PUSH R0"); //2 cycle
  a6:	0f 92       	push	r0
		asm volatile("POP R0"); //2 cycle
  a8:	0f 90       	pop	r0
		asm volatile("PUSH R0"); //2 cycle
  aa:	0f 92       	push	r0
		asm volatile("POP R0"); //2 cycle
  ac:	0f 90       	pop	r0

#include <avr/io.h>
void delay_us(unsigned char time_us)
{
	register unsigned char i;
	for(i=0;i<time_us;i++) //4 cycle
  ae:	9f 5f       	subi	r25, 0xFF	; 255
  b0:	98 17       	cp	r25, r24
  b2:	b8 f3       	brcs	.-18     	; 0xa2 <delay_us+0x4>
		asm volatile("POP R0"); //2 cycle
		asm volatile("PUSH R0"); //2 cycle
		asm volatile("POP R0"); //2 cycle
		// Sum = 16 cycle=1 us for 16MHz
	}
}
  b4:	08 95       	ret

000000b6 <delay_ms>:
void delay_ms(unsigned int time_ms)
{
  b6:	0f 93       	push	r16
  b8:	1f 93       	push	r17
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
  be:	8c 01       	movw	r16, r24
	register unsigned int i;
	for(i=0;i<time_ms;i++) //4 cycle
  c0:	c0 e0       	ldi	r28, 0x00	; 0
  c2:	d0 e0       	ldi	r29, 0x00	; 0
  c4:	09 c0       	rjmp	.+18     	; 0xd8 <delay_ms+0x22>
	{
		delay_us(250);
  c6:	8a ef       	ldi	r24, 0xFA	; 250
  c8:	ea df       	rcall	.-44     	; 0x9e <delay_us>
		delay_us(250);
  ca:	8a ef       	ldi	r24, 0xFA	; 250
  cc:	e8 df       	rcall	.-48     	; 0x9e <delay_us>
		delay_us(250);
  ce:	8a ef       	ldi	r24, 0xFA	; 250
  d0:	e6 df       	rcall	.-52     	; 0x9e <delay_us>
		delay_us(250);
  d2:	8a ef       	ldi	r24, 0xFA	; 250
  d4:	e4 df       	rcall	.-56     	; 0x9e <delay_us>
  d6:	21 96       	adiw	r28, 0x01	; 1
	}
}
void delay_ms(unsigned int time_ms)
{
	register unsigned int i;
	for(i=0;i<time_ms;i++) //4 cycle
  d8:	c0 17       	cp	r28, r16
  da:	d1 07       	cpc	r29, r17
  dc:	a0 f3       	brcs	.-24     	; 0xc6 <delay_ms+0x10>
  de:	df 91       	pop	r29
		delay_us(250);
		delay_us(250);
		delay_us(250);
		delay_us(250);
	}
}
  e0:	cf 91       	pop	r28
  e2:	1f 91       	pop	r17
  e4:	0f 91       	pop	r16
  e6:	08 95       	ret

000000e8 <main>:
  e8:	8f ef       	ldi	r24, 0xFF	; 255
int main(void)
{
	DDRA = 0xff;
  ea:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xff;
  ec:	87 bb       	out	0x17, r24	; 23
	DDRC = 0xff;
  ee:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xff;
  f0:	81 bb       	out	0x11, r24	; 17
	
	//PORTD = 0xff;

	while(1)
	{
		PORTA = 0xff;
  f2:	cf ef       	ldi	r28, 0xFF	; 255
  f4:	cb bb       	out	0x1b, r28	; 27
		PORTB = 0x00;
  f6:	18 ba       	out	0x18, r1	; 24
		PORTC = 0x00;
  f8:	15 ba       	out	0x15, r1	; 21
		PORTD = 0x01;
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	82 bb       	out	0x12, r24	; 18
		delay_ms(500);
  fe:	84 ef       	ldi	r24, 0xF4	; 244
 100:	91 e0       	ldi	r25, 0x01	; 1
 102:	d9 df       	rcall	.-78     	; 0xb6 <delay_ms>
		PORTA = 0x00;
 104:	1b ba       	out	0x1b, r1	; 27
		PORTB = 0xff;
 106:	c8 bb       	out	0x18, r28	; 24
		PORTC = 0x00;
 108:	15 ba       	out	0x15, r1	; 21
		PORTD = 0x03;
 10a:	83 e0       	ldi	r24, 0x03	; 3
 10c:	82 bb       	out	0x12, r24	; 18
		delay_ms(500);
 10e:	84 ef       	ldi	r24, 0xF4	; 244
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	d1 df       	rcall	.-94     	; 0xb6 <delay_ms>
		PORTA = 0x00;
 114:	1b ba       	out	0x1b, r1	; 27
		PORTB = 0x00;
 116:	18 ba       	out	0x18, r1	; 24
		PORTC = 0xff;
 118:	c5 bb       	out	0x15, r28	; 21
		PORTD = 0x07;
 11a:	87 e0       	ldi	r24, 0x07	; 7
 11c:	82 bb       	out	0x12, r24	; 18
		delay_ms(500);
 11e:	84 ef       	ldi	r24, 0xF4	; 244
 120:	91 e0       	ldi	r25, 0x01	; 1
 122:	c9 df       	rcall	.-110    	; 0xb6 <delay_ms>
		PORTA = 0xff;
 124:	cb bb       	out	0x1b, r28	; 27
		PORTB = 0x00;
 126:	18 ba       	out	0x18, r1	; 24
		PORTC = 0x00;
 128:	15 ba       	out	0x15, r1	; 21
		PORTD = 0x0f;
 12a:	8f e0       	ldi	r24, 0x0F	; 15
		delay_ms(500);
 12c:	82 bb       	out	0x12, r24	; 18
 12e:	84 ef       	ldi	r24, 0xF4	; 244
 130:	91 e0       	ldi	r25, 0x01	; 1
 132:	c1 df       	rcall	.-126    	; 0xb6 <delay_ms>
		PORTA = 0x00;
 134:	1b ba       	out	0x1b, r1	; 27
		PORTB = 0xff;
 136:	c8 bb       	out	0x18, r28	; 24
		PORTC = 0x00;
 138:	15 ba       	out	0x15, r1	; 21
		PORTD = 0x1f;
 13a:	8f e1       	ldi	r24, 0x1F	; 31
		delay_ms(500);
 13c:	82 bb       	out	0x12, r24	; 18
 13e:	84 ef       	ldi	r24, 0xF4	; 244
 140:	91 e0       	ldi	r25, 0x01	; 1
 142:	b9 df       	rcall	.-142    	; 0xb6 <delay_ms>
		PORTA = 0x00;
 144:	1b ba       	out	0x1b, r1	; 27
		PORTB = 0x00;
 146:	18 ba       	out	0x18, r1	; 24
		PORTC = 0xff;
		PORTD = 0x3f;
 148:	c5 bb       	out	0x15, r28	; 21
 14a:	8f e3       	ldi	r24, 0x3F	; 63
		delay_ms(500);
 14c:	82 bb       	out	0x12, r24	; 18
 14e:	84 ef       	ldi	r24, 0xF4	; 244
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	b1 df       	rcall	.-158    	; 0xb6 <delay_ms>
		PORTA = 0xff;
 154:	cb bb       	out	0x1b, r28	; 27
		PORTB = 0xff;
		PORTC = 0xff;
 156:	c8 bb       	out	0x18, r28	; 24
		PORTD = 0x7f;
 158:	c5 bb       	out	0x15, r28	; 21
 15a:	8f e7       	ldi	r24, 0x7F	; 127
		delay_ms(500);
 15c:	82 bb       	out	0x12, r24	; 18
 15e:	84 ef       	ldi	r24, 0xF4	; 244
 160:	91 e0       	ldi	r25, 0x01	; 1
		PORTA = 0x00;
 162:	a9 df       	rcall	.-174    	; 0xb6 <delay_ms>
		PORTB = 0x00;
 164:	1b ba       	out	0x1b, r1	; 27
		PORTC = 0x00;
 166:	18 ba       	out	0x18, r1	; 24
		PORTD = 0xff;
 168:	15 ba       	out	0x15, r1	; 21
		delay_ms(500);
 16a:	c2 bb       	out	0x12, r28	; 18
 16c:	84 ef       	ldi	r24, 0xF4	; 244
 16e:	91 e0       	ldi	r25, 0x01	; 1
 170:	a2 df       	rcall	.-188    	; 0xb6 <delay_ms>
 172:	bf cf       	rjmp	.-130    	; 0xf2 <main+0xa>

00000174 <_exit>:
 174:	f8 94       	cli

00000176 <__stop_program>:
 176:	ff cf       	rjmp	.-2      	; 0x176 <__stop_program>
